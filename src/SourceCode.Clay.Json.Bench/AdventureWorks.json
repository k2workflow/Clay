{
    "components": {
        "schemas": {
            "Bit(Optional)": {
                "nullable": true,
                "type": "boolean"
            },
            "Bit(Required)": {
                "required": true,
                "type": "boolean"
            },
            "Date(Optional)": {
                "format": "date",
                "maximum": 3652059,
                "minimum": 0,
                "nullable": true,
                "type": "string"
            },
            "Date(Required)": {
                "format": "date",
                "maximum": 3652059,
                "minimum": 0,
                "required": true,
                "type": "string"
            },
            "DateTime(Optional)": {
                "format": "date-time",
                "maximum": 3155378975999970000,
                "minimum": 552877920000000000,
                "nullable": true,
                "type": "string"
            },
            "DateTime(Required)": {
                "format": "date-time",
                "maximum": 3155378975999970000,
                "minimum": 552877920000000000,
                "required": true,
                "type": "string"
            },
            "Decimal(Optional,38,2)": {
                "format": "double",
                "nullable": true,
                "type": "number"
            },
            "Decimal(Optional,38,6)": {
                "format": "double",
                "nullable": true,
                "type": "number"
            },
            "Decimal(Optional,8,2)": {
                "format": "double",
                "nullable": true,
                "type": "number"
            },
            "Decimal(Optional,9,2)": {
                "format": "double",
                "nullable": true,
                "type": "number"
            },
            "Decimal(Optional,9,4)": {
                "format": "double",
                "nullable": true,
                "type": "number"
            },
            "Decimal(Required,8,2)": {
                "format": "double",
                "required": true,
                "type": "number"
            },
            "Decimal(Required,9,4)": {
                "format": "double",
                "required": true,
                "type": "number"
            },
            "HumanResources.Department(Optional)": {
                "properties": {
                    "DepartmentID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "GroupName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Department(Updateable)": {
                "properties": {
                    "GroupName": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Department.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/HumanResources.Department.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Department.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "DepartmentID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "GroupName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Department.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/HumanResources.Department.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "HumanResources.Employee(Optional)": {
                "properties": {
                    "BirthDate": {
                        "$ref": "#/components/schemas/Date(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CurrentFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "Gender": {
                        "$ref": "#/components/schemas/NChar(Optional,1)"
                    },
                    "HireDate": {
                        "$ref": "#/components/schemas/Date(Optional)"
                    },
                    "JobTitle": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "LoginID": {
                        "$ref": "#/components/schemas/NVarChar(Optional,256)"
                    },
                    "MaritalStatus": {
                        "$ref": "#/components/schemas/NChar(Optional,1)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "NationalIDNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "OrganizationLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "OrganizationNode": {
                        "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                    },
                    "SalariedFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "SickLeaveHours": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "VacationHours": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Employee(Updateable)": {
                "properties": {
                    "BirthDate": {
                        "$ref": "#/components/schemas/Date(Required)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "CurrentFlag": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "Gender": {
                        "$ref": "#/components/schemas/NChar(Required,1)"
                    },
                    "HireDate": {
                        "$ref": "#/components/schemas/Date(Required)"
                    },
                    "JobTitle": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "LoginID": {
                        "$ref": "#/components/schemas/NVarChar(Required,256)"
                    },
                    "MaritalStatus": {
                        "$ref": "#/components/schemas/NChar(Required,1)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "NationalIDNumber": {
                        "$ref": "#/components/schemas/NVarChar(Required,15)"
                    },
                    "OrganizationNode": {
                        "$ref": "#/components/schemas/sys.hierarchyid(Required)"
                    },
                    "SalariedFlag": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "SickLeaveHours": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "VacationHours": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Employee.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/HumanResources.Employee.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Employee.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BirthDate": {
                        "$ref": "#/components/schemas/Date(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CurrentFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "Gender": {
                        "$ref": "#/components/schemas/NChar(Optional,1)"
                    },
                    "HireDate": {
                        "$ref": "#/components/schemas/Date(Optional)"
                    },
                    "JobTitle": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "LoginID": {
                        "$ref": "#/components/schemas/NVarChar(Optional,256)"
                    },
                    "MaritalStatus": {
                        "$ref": "#/components/schemas/NChar(Optional,1)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "NationalIDNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "OrganizationLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "OrganizationNode": {
                        "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                    },
                    "SalariedFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "SickLeaveHours": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "VacationHours": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Employee.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/HumanResources.Employee.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "HumanResources.EmployeeDepartmentHistory(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "DepartmentID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/Date(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ShiftID": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/Date(Optional)"
                    }
                },
                "type": "object"
            },
            "HumanResources.EmployeeDepartmentHistory(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "DepartmentID": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/Date(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ShiftID": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/Date(Required)"
                    }
                },
                "type": "object"
            },
            "HumanResources.EmployeeDepartmentHistory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/HumanResources.EmployeeDepartmentHistory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "HumanResources.EmployeeDepartmentHistory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "DepartmentID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/Date(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ShiftID": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/Date(Optional)"
                    }
                },
                "type": "object"
            },
            "HumanResources.EmployeeDepartmentHistory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/HumanResources.EmployeeDepartmentHistory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "HumanResources.EmployeePayHistory(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PayFrequency": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "Rate": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "RateChangeDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "HumanResources.EmployeePayHistory(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "PayFrequency": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "Rate": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "RateChangeDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "HumanResources.EmployeePayHistory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/HumanResources.EmployeePayHistory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "HumanResources.EmployeePayHistory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PayFrequency": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "Rate": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "RateChangeDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "HumanResources.EmployeePayHistory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/HumanResources.EmployeePayHistory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "HumanResources.JobCandidate(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "JobCandidateID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Resume": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    }
                },
                "type": "object"
            },
            "HumanResources.JobCandidate(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Resume": {
                        "$ref": "#/components/schemas/Xml(Required)"
                    }
                },
                "type": "object"
            },
            "HumanResources.JobCandidate.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/HumanResources.JobCandidate.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "HumanResources.JobCandidate.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "JobCandidateID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Resume": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    }
                },
                "type": "object"
            },
            "HumanResources.JobCandidate.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/HumanResources.JobCandidate.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "HumanResources.Shift(Optional)": {
                "properties": {
                    "EndTime": {
                        "$ref": "#/components/schemas/Time(Optional,7)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ShiftID": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "StartTime": {
                        "$ref": "#/components/schemas/Time(Optional,7)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Shift(Updateable)": {
                "properties": {
                    "EndTime": {
                        "$ref": "#/components/schemas/Time(Required,7)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "StartTime": {
                        "$ref": "#/components/schemas/Time(Required,7)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Shift.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/HumanResources.Shift.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Shift.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "EndTime": {
                        "$ref": "#/components/schemas/Time(Optional,7)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ShiftID": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "StartTime": {
                        "$ref": "#/components/schemas/Time(Optional,7)"
                    }
                },
                "type": "object"
            },
            "HumanResources.Shift.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/HumanResources.Shift.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "HumanResources.uspUpdateEmployeeHireInfo.Request": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "CurrentFlag": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "HireDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "JobTitle": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "PayFrequency": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "Rate": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "RateChangeDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "HumanResources.uspUpdateEmployeeHireInfo.Response": {
                "properties": {
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "HumanResources.uspUpdateEmployeeLogin.Request": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "CurrentFlag": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "HireDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "JobTitle": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "LoginID": {
                        "$ref": "#/components/schemas/NVarChar(Required,256)"
                    },
                    "OrganizationNode": {
                        "$ref": "#/components/schemas/sys.hierarchyid(Required)"
                    }
                },
                "type": "object"
            },
            "HumanResources.uspUpdateEmployeeLogin.Response": {
                "properties": {
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "HumanResources.uspUpdateEmployeePersonalInfo.Request": {
                "properties": {
                    "BirthDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Gender": {
                        "$ref": "#/components/schemas/NChar(Required,1)"
                    },
                    "MaritalStatus": {
                        "$ref": "#/components/schemas/NChar(Required,1)"
                    },
                    "NationalIDNumber": {
                        "$ref": "#/components/schemas/NVarChar(Required,15)"
                    }
                },
                "type": "object"
            },
            "HumanResources.uspUpdateEmployeePersonalInfo.Response": {
                "properties": {
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Int(Optional)": {
                "format": "int32",
                "nullable": true,
                "type": "integer"
            },
            "Int(Required)": {
                "format": "int32",
                "required": true,
                "type": "integer"
            },
            "Money(Optional)": {
                "format": "double",
                "maximum": 922337203685477.63,
                "minimum": -922337203685477.63,
                "nullable": true,
                "type": "number"
            },
            "Money(Required)": {
                "format": "double",
                "maximum": 922337203685477.63,
                "minimum": -922337203685477.63,
                "required": true,
                "type": "number"
            },
            "NChar(Optional,1)": {
                "maxLength": 1,
                "nullable": true,
                "type": "string"
            },
            "NChar(Optional,2)": {
                "maxLength": 2,
                "nullable": true,
                "type": "string"
            },
            "NChar(Optional,3)": {
                "maxLength": 3,
                "nullable": true,
                "type": "string"
            },
            "NChar(Optional,5)": {
                "maxLength": 5,
                "nullable": true,
                "type": "string"
            },
            "NChar(Optional,6)": {
                "maxLength": 6,
                "nullable": true,
                "type": "string"
            },
            "NChar(Required,1)": {
                "maxLength": 1,
                "required": true,
                "type": "string"
            },
            "NChar(Required,2)": {
                "maxLength": 2,
                "required": true,
                "type": "string"
            },
            "NChar(Required,3)": {
                "maxLength": 3,
                "required": true,
                "type": "string"
            },
            "NChar(Required,5)": {
                "maxLength": 5,
                "required": true,
                "type": "string"
            },
            "NChar(Required,6)": {
                "maxLength": 6,
                "required": true,
                "type": "string"
            },
            "NVarChar(Optional,10)": {
                "maxLength": 10,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,1000)": {
                "maxLength": 1000,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,1024)": {
                "maxLength": 1024,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,126)": {
                "maxLength": 126,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,128)": {
                "maxLength": 128,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,15)": {
                "maxLength": 15,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,16)": {
                "maxLength": 16,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,25)": {
                "maxLength": 25,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,255)": {
                "maxLength": 255,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,256)": {
                "maxLength": 256,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,3)": {
                "maxLength": 3,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,30)": {
                "maxLength": 30,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,3850)": {
                "maxLength": 3850,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,400)": {
                "maxLength": 400,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,4000)": {
                "maxLength": 4000,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,5)": {
                "maxLength": 5,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,50)": {
                "maxLength": 50,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,60)": {
                "maxLength": 60,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,8)": {
                "maxLength": 8,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Optional,Max)": {
                "maxLength": 1073741821,
                "nullable": true,
                "type": "string"
            },
            "NVarChar(Required,10)": {
                "maxLength": 10,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,1024)": {
                "maxLength": 1024,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,126)": {
                "maxLength": 126,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,128)": {
                "maxLength": 128,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,15)": {
                "maxLength": 15,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,25)": {
                "maxLength": 25,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,255)": {
                "maxLength": 255,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,256)": {
                "maxLength": 256,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,3)": {
                "maxLength": 3,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,30)": {
                "maxLength": 30,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,3850)": {
                "maxLength": 3850,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,400)": {
                "maxLength": 400,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,4000)": {
                "maxLength": 4000,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,5)": {
                "maxLength": 5,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,50)": {
                "maxLength": 50,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,60)": {
                "maxLength": 60,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,8)": {
                "maxLength": 8,
                "required": true,
                "type": "string"
            },
            "NVarChar(Required,Max)": {
                "maxLength": 1073741821,
                "required": true,
                "type": "string"
            },
            "Person.Address(Optional)": {
                "properties": {
                    "AddressID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "AddressLine1": {
                        "$ref": "#/components/schemas/NVarChar(Optional,60)"
                    },
                    "AddressLine2": {
                        "$ref": "#/components/schemas/NVarChar(Optional,60)"
                    },
                    "City": {
                        "$ref": "#/components/schemas/NVarChar(Optional,30)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PostalCode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "SpatialLocation": {
                        "$ref": "#/components/schemas/sys.geography(Optional)"
                    },
                    "StateProvinceID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.Address(Updateable)": {
                "properties": {
                    "AddressLine1": {
                        "$ref": "#/components/schemas/NVarChar(Required,60)"
                    },
                    "AddressLine2": {
                        "$ref": "#/components/schemas/NVarChar(Required,60)"
                    },
                    "City": {
                        "$ref": "#/components/schemas/NVarChar(Required,30)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "PostalCode": {
                        "$ref": "#/components/schemas/NVarChar(Required,15)"
                    },
                    "SpatialLocation": {
                        "$ref": "#/components/schemas/sys.geography(Required)"
                    },
                    "StateProvinceID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Person.Address.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.Address.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.Address.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "AddressID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "AddressLine1": {
                        "$ref": "#/components/schemas/NVarChar(Optional,60)"
                    },
                    "AddressLine2": {
                        "$ref": "#/components/schemas/NVarChar(Optional,60)"
                    },
                    "City": {
                        "$ref": "#/components/schemas/NVarChar(Optional,30)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PostalCode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "SpatialLocation": {
                        "$ref": "#/components/schemas/sys.geography(Optional)"
                    },
                    "StateProvinceID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.Address.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.Address.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.AddressType(Optional)": {
                "properties": {
                    "AddressTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.AddressType(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Person.AddressType.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.AddressType.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.AddressType.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "AddressTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.AddressType.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.AddressType.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.BusinessEntity(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntity(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntity.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.BusinessEntity.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntity.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntity.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.BusinessEntity.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.BusinessEntityAddress(Optional)": {
                "properties": {
                    "AddressID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "AddressTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntityAddress(Updateable)": {
                "properties": {
                    "AddressID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "AddressTypeID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntityAddress.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.BusinessEntityAddress.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntityAddress.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "AddressID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "AddressTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntityAddress.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.BusinessEntityAddress.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.BusinessEntityContact(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ContactTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PersonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntityContact(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ContactTypeID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "PersonID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntityContact.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.BusinessEntityContact.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntityContact.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ContactTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PersonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.BusinessEntityContact.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.BusinessEntityContact.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.ContactType(Optional)": {
                "properties": {
                    "ContactTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Person.ContactType(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Person.ContactType.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.ContactType.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.ContactType.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ContactTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Person.ContactType.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.ContactType.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.CountryRegion(Optional)": {
                "properties": {
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Person.CountryRegion(Updateable)": {
                "properties": {
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Required,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Person.CountryRegion.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.CountryRegion.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.CountryRegion.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Person.CountryRegion.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.CountryRegion.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.EmailAddress(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "EmailAddress": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "EmailAddressID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.EmailAddress(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "EmailAddress": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Person.EmailAddress.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.EmailAddress.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.EmailAddress.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "EmailAddress": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "EmailAddressID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.EmailAddress.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.EmailAddress.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.Password(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PasswordHash": {
                        "$ref": "#/components/schemas/VarChar(Optional,128)"
                    },
                    "PasswordSalt": {
                        "$ref": "#/components/schemas/VarChar(Optional,10)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.Password(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "PasswordHash": {
                        "$ref": "#/components/schemas/VarChar(Required,128)"
                    },
                    "PasswordSalt": {
                        "$ref": "#/components/schemas/VarChar(Required,10)"
                    }
                },
                "type": "object"
            },
            "Person.Password.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.Password.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.Password.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PasswordHash": {
                        "$ref": "#/components/schemas/VarChar(Optional,128)"
                    },
                    "PasswordSalt": {
                        "$ref": "#/components/schemas/VarChar(Optional,10)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.Password.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.Password.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.Person(Optional)": {
                "properties": {
                    "AdditionalContactInfo": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Demographics": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "EmailPromotion": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "FirstName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "LastName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "MiddleName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "NameStyle": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "PersonType": {
                        "$ref": "#/components/schemas/NChar(Optional,2)"
                    },
                    "Suffix": {
                        "$ref": "#/components/schemas/NVarChar(Optional,10)"
                    },
                    "Title": {
                        "$ref": "#/components/schemas/NVarChar(Optional,8)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.Person(Updateable)": {
                "properties": {
                    "AdditionalContactInfo": {
                        "$ref": "#/components/schemas/Xml(Required)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Demographics": {
                        "$ref": "#/components/schemas/Xml(Required)"
                    },
                    "EmailPromotion": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "FirstName": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "LastName": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "MiddleName": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "NameStyle": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "PersonType": {
                        "$ref": "#/components/schemas/NChar(Required,2)"
                    },
                    "Suffix": {
                        "$ref": "#/components/schemas/NVarChar(Required,10)"
                    },
                    "Title": {
                        "$ref": "#/components/schemas/NVarChar(Required,8)"
                    }
                },
                "type": "object"
            },
            "Person.Person.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.Person.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.Person.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "AdditionalContactInfo": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Demographics": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "EmailPromotion": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "FirstName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "LastName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "MiddleName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "NameStyle": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "PersonType": {
                        "$ref": "#/components/schemas/NChar(Optional,2)"
                    },
                    "Suffix": {
                        "$ref": "#/components/schemas/NVarChar(Optional,10)"
                    },
                    "Title": {
                        "$ref": "#/components/schemas/NVarChar(Optional,8)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.Person.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.Person.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.PersonPhone(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PhoneNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "PhoneNumberTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.PersonPhone(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "PhoneNumber": {
                        "$ref": "#/components/schemas/NVarChar(Required,25)"
                    },
                    "PhoneNumberTypeID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Person.PersonPhone.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.PersonPhone.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.PersonPhone.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PhoneNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "PhoneNumberTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.PersonPhone.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.PersonPhone.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.PhoneNumberType(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "PhoneNumberTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.PhoneNumberType(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Person.PhoneNumberType.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.PhoneNumberType.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.PhoneNumberType.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "PhoneNumberTypeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.PhoneNumberType.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.PhoneNumberType.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Person.StateProvince(Optional)": {
                "properties": {
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,3)"
                    },
                    "IsOnlyStateProvinceFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "StateProvinceCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "StateProvinceID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.StateProvince(Updateable)": {
                "properties": {
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Required,3)"
                    },
                    "IsOnlyStateProvinceFlag": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "StateProvinceCode": {
                        "$ref": "#/components/schemas/NChar(Required,3)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Person.StateProvince.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Person.StateProvince.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Person.StateProvince.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,3)"
                    },
                    "IsOnlyStateProvinceFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "StateProvinceCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "StateProvinceID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Person.StateProvince.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Person.StateProvince.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.BillOfMaterials(Optional)": {
                "properties": {
                    "BOMLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "BillOfMaterialsID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ComponentID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PerAssemblyQty": {
                        "$ref": "#/components/schemas/Decimal(Optional,8,2)"
                    },
                    "ProductAssemblyID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "UnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    }
                },
                "type": "object"
            },
            "Production.BillOfMaterials(Updateable)": {
                "properties": {
                    "BOMLevel": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "ComponentID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "PerAssemblyQty": {
                        "$ref": "#/components/schemas/Decimal(Required,8,2)"
                    },
                    "ProductAssemblyID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "UnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Required,3)"
                    }
                },
                "type": "object"
            },
            "Production.BillOfMaterials.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.BillOfMaterials.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.BillOfMaterials.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BOMLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "BillOfMaterialsID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ComponentID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PerAssemblyQty": {
                        "$ref": "#/components/schemas/Decimal(Optional,8,2)"
                    },
                    "ProductAssemblyID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "UnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    }
                },
                "type": "object"
            },
            "Production.BillOfMaterials.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.BillOfMaterials.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.Culture(Optional)": {
                "properties": {
                    "CultureID": {
                        "$ref": "#/components/schemas/NChar(Optional,6)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Production.Culture(Updateable)": {
                "properties": {
                    "CultureID": {
                        "$ref": "#/components/schemas/NChar(Required,6)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Production.Culture.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.Culture.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.Culture.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "CultureID": {
                        "$ref": "#/components/schemas/NChar(Optional,6)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Production.Culture.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.Culture.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.Document(Optional)": {
                "properties": {
                    "ChangeNumber": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Document": {
                        "$ref": "#/components/schemas/VarBinary(Optional,Max)"
                    },
                    "DocumentLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "DocumentNode": {
                        "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                    },
                    "DocumentSummary": {
                        "$ref": "#/components/schemas/NVarChar(Optional,Max)"
                    },
                    "FileExtension": {
                        "$ref": "#/components/schemas/NVarChar(Optional,8)"
                    },
                    "FileName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,400)"
                    },
                    "FolderFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Owner": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Revision": {
                        "$ref": "#/components/schemas/NChar(Optional,5)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "Title": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.Document(Updateable)": {
                "properties": {
                    "ChangeNumber": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Document": {
                        "$ref": "#/components/schemas/VarBinary(Required,Max)"
                    },
                    "DocumentNode": {
                        "$ref": "#/components/schemas/sys.hierarchyid(Required)"
                    },
                    "DocumentSummary": {
                        "$ref": "#/components/schemas/NVarChar(Required,Max)"
                    },
                    "FileExtension": {
                        "$ref": "#/components/schemas/NVarChar(Required,8)"
                    },
                    "FileName": {
                        "$ref": "#/components/schemas/NVarChar(Required,400)"
                    },
                    "FolderFlag": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Owner": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Revision": {
                        "$ref": "#/components/schemas/NChar(Required,5)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "Title": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Production.Document.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.Document.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.Document.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ChangeNumber": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Document": {
                        "$ref": "#/components/schemas/VarBinary(Optional,Max)"
                    },
                    "DocumentLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "DocumentNode": {
                        "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                    },
                    "DocumentSummary": {
                        "$ref": "#/components/schemas/NVarChar(Optional,Max)"
                    },
                    "FileExtension": {
                        "$ref": "#/components/schemas/NVarChar(Optional,8)"
                    },
                    "FileName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,400)"
                    },
                    "FolderFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Owner": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Revision": {
                        "$ref": "#/components/schemas/NChar(Optional,5)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "Title": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.Document.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.Document.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.Illustration(Optional)": {
                "properties": {
                    "Diagram": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "IllustrationID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.Illustration(Updateable)": {
                "properties": {
                    "Diagram": {
                        "$ref": "#/components/schemas/Xml(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Production.Illustration.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.Illustration.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.Illustration.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "Diagram": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "IllustrationID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.Illustration.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.Illustration.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.Location(Optional)": {
                "properties": {
                    "Availability": {
                        "$ref": "#/components/schemas/Decimal(Optional,8,2)"
                    },
                    "CostRate": {
                        "$ref": "#/components/schemas/SmallMoney(Optional)"
                    },
                    "LocationID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Production.Location(Updateable)": {
                "properties": {
                    "Availability": {
                        "$ref": "#/components/schemas/Decimal(Required,8,2)"
                    },
                    "CostRate": {
                        "$ref": "#/components/schemas/SmallMoney(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Production.Location.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.Location.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.Location.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "Availability": {
                        "$ref": "#/components/schemas/Decimal(Optional,8,2)"
                    },
                    "CostRate": {
                        "$ref": "#/components/schemas/SmallMoney(Optional)"
                    },
                    "LocationID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Production.Location.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.Location.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.Product(Optional)": {
                "properties": {
                    "Class": {
                        "$ref": "#/components/schemas/NChar(Optional,2)"
                    },
                    "Color": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "DaysToManufacture": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "DiscontinuedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "FinishedGoodsFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "ListPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "MakeFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductLine": {
                        "$ref": "#/components/schemas/NChar(Optional,2)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "ProductSubcategoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReorderPoint": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "SafetyStockLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "SellEndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SellStartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Size": {
                        "$ref": "#/components/schemas/NVarChar(Optional,5)"
                    },
                    "SizeUnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "StandardCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "Style": {
                        "$ref": "#/components/schemas/NChar(Optional,2)"
                    },
                    "Weight": {
                        "$ref": "#/components/schemas/Decimal(Optional,8,2)"
                    },
                    "WeightUnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.Product(Updateable)": {
                "properties": {
                    "Class": {
                        "$ref": "#/components/schemas/NChar(Required,2)"
                    },
                    "Color": {
                        "$ref": "#/components/schemas/NVarChar(Required,15)"
                    },
                    "DaysToManufacture": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "DiscontinuedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "FinishedGoodsFlag": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "ListPrice": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "MakeFlag": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ProductLine": {
                        "$ref": "#/components/schemas/NChar(Required,2)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ProductNumber": {
                        "$ref": "#/components/schemas/NVarChar(Required,25)"
                    },
                    "ProductSubcategoryID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReorderPoint": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "SafetyStockLevel": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "SellEndDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "SellStartDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Size": {
                        "$ref": "#/components/schemas/NVarChar(Required,5)"
                    },
                    "SizeUnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Required,3)"
                    },
                    "StandardCost": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "Style": {
                        "$ref": "#/components/schemas/NChar(Required,2)"
                    },
                    "Weight": {
                        "$ref": "#/components/schemas/Decimal(Required,8,2)"
                    },
                    "WeightUnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Required,3)"
                    }
                },
                "type": "object"
            },
            "Production.Product.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.Product.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.Product.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "Class": {
                        "$ref": "#/components/schemas/NChar(Optional,2)"
                    },
                    "Color": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "DaysToManufacture": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "DiscontinuedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "FinishedGoodsFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "ListPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "MakeFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductLine": {
                        "$ref": "#/components/schemas/NChar(Optional,2)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "ProductSubcategoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReorderPoint": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "SafetyStockLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "SellEndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SellStartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Size": {
                        "$ref": "#/components/schemas/NVarChar(Optional,5)"
                    },
                    "SizeUnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "StandardCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "Style": {
                        "$ref": "#/components/schemas/NChar(Optional,2)"
                    },
                    "Weight": {
                        "$ref": "#/components/schemas/Decimal(Optional,8,2)"
                    },
                    "WeightUnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.Product.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.Product.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductCategory(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ProductCategoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductCategory(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Production.ProductCategory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductCategory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductCategory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ProductCategoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductCategory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductCategory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductCostHistory(Optional)": {
                "properties": {
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StandardCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductCostHistory(Updateable)": {
                "properties": {
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "StandardCost": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Production.ProductCostHistory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductCostHistory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductCostHistory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StandardCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductCostHistory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductCostHistory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductDescription(Optional)": {
                "properties": {
                    "Description": {
                        "$ref": "#/components/schemas/NVarChar(Optional,400)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductDescriptionID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductDescription(Updateable)": {
                "properties": {
                    "Description": {
                        "$ref": "#/components/schemas/NVarChar(Required,400)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Production.ProductDescription.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductDescription.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductDescription.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "Description": {
                        "$ref": "#/components/schemas/NVarChar(Optional,400)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductDescriptionID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductDescription.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductDescription.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductDocument(Optional)": {
                "properties": {
                    "DocumentNode": {
                        "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductDocument(Updateable)": {
                "properties": {
                    "DocumentNode": {
                        "$ref": "#/components/schemas/sys.hierarchyid(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Production.ProductDocument.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductDocument.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductDocument.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "DocumentNode": {
                        "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductDocument.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductDocument.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductInventory(Optional)": {
                "properties": {
                    "Bin": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "LocationID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "Shelf": {
                        "$ref": "#/components/schemas/NVarChar(Optional,10)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductInventory(Updateable)": {
                "properties": {
                    "Bin": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "LocationID": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "Shelf": {
                        "$ref": "#/components/schemas/NVarChar(Required,10)"
                    }
                },
                "type": "object"
            },
            "Production.ProductInventory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductInventory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductInventory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "Bin": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "LocationID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "Shelf": {
                        "$ref": "#/components/schemas/NVarChar(Optional,10)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductInventory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductInventory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductListPriceHistory(Optional)": {
                "properties": {
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ListPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductListPriceHistory(Updateable)": {
                "properties": {
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ListPrice": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Production.ProductListPriceHistory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductListPriceHistory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductListPriceHistory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ListPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductListPriceHistory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductListPriceHistory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductModel(Optional)": {
                "properties": {
                    "CatalogDescription": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "Instructions": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModel(Updateable)": {
                "properties": {
                    "CatalogDescription": {
                        "$ref": "#/components/schemas/Xml(Required)"
                    },
                    "Instructions": {
                        "$ref": "#/components/schemas/Xml(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModel.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductModel.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModel.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "CatalogDescription": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "Instructions": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModel.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductModel.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductModelIllustration(Optional)": {
                "properties": {
                    "IllustrationID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModelIllustration(Updateable)": {
                "properties": {
                    "IllustrationID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModelIllustration.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductModelIllustration.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModelIllustration.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "IllustrationID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModelIllustration.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductModelIllustration.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductModelProductDescriptionCulture(Optional)": {
                "properties": {
                    "CultureID": {
                        "$ref": "#/components/schemas/NChar(Optional,6)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductDescriptionID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModelProductDescriptionCulture(Updateable)": {
                "properties": {
                    "CultureID": {
                        "$ref": "#/components/schemas/NChar(Required,6)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductDescriptionID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModelProductDescriptionCulture.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductModelProductDescriptionCulture.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModelProductDescriptionCulture.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "CultureID": {
                        "$ref": "#/components/schemas/NChar(Optional,6)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductDescriptionID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductModelID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductModelProductDescriptionCulture.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductModelProductDescriptionCulture.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductPhoto(Optional)": {
                "properties": {
                    "LargePhoto": {
                        "$ref": "#/components/schemas/VarBinary(Optional,Max)"
                    },
                    "LargePhotoFileName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductPhotoID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ThumbNailPhoto": {
                        "$ref": "#/components/schemas/VarBinary(Optional,Max)"
                    },
                    "ThumbnailPhotoFileName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Production.ProductPhoto(Updateable)": {
                "properties": {
                    "LargePhoto": {
                        "$ref": "#/components/schemas/VarBinary(Required,Max)"
                    },
                    "LargePhotoFileName": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ThumbNailPhoto": {
                        "$ref": "#/components/schemas/VarBinary(Required,Max)"
                    },
                    "ThumbnailPhotoFileName": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Production.ProductPhoto.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductPhoto.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductPhoto.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "LargePhoto": {
                        "$ref": "#/components/schemas/VarBinary(Optional,Max)"
                    },
                    "LargePhotoFileName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductPhotoID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ThumbNailPhoto": {
                        "$ref": "#/components/schemas/VarBinary(Optional,Max)"
                    },
                    "ThumbnailPhotoFileName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Production.ProductPhoto.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductPhoto.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductProductPhoto(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Primary": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductPhotoID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductProductPhoto(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Primary": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ProductPhotoID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Production.ProductProductPhoto.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductProductPhoto.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductProductPhoto.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Primary": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductPhotoID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductProductPhoto.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductProductPhoto.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductReview(Optional)": {
                "properties": {
                    "Comments": {
                        "$ref": "#/components/schemas/NVarChar(Optional,3850)"
                    },
                    "EmailAddress": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductReviewID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Rating": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReviewDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ReviewerName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Production.ProductReview(Updateable)": {
                "properties": {
                    "Comments": {
                        "$ref": "#/components/schemas/NVarChar(Required,3850)"
                    },
                    "EmailAddress": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Rating": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReviewDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ReviewerName": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Production.ProductReview.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductReview.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductReview.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "Comments": {
                        "$ref": "#/components/schemas/NVarChar(Optional,3850)"
                    },
                    "EmailAddress": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductReviewID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Rating": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReviewDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ReviewerName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Production.ProductReview.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductReview.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ProductSubcategory(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ProductCategoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductSubcategoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductSubcategory(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ProductCategoryID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Production.ProductSubcategory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ProductSubcategory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ProductSubcategory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ProductCategoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductSubcategoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ProductSubcategory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ProductSubcategory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.ScrapReason(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ScrapReasonID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ScrapReason(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Production.ScrapReason.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.ScrapReason.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.ScrapReason.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ScrapReasonID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.ScrapReason.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.ScrapReason.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.TransactionHistory(Optional)": {
                "properties": {
                    "ActualCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReferenceOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReferenceOrderLineID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TransactionDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "TransactionID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TransactionType": {
                        "$ref": "#/components/schemas/NChar(Optional,1)"
                    }
                },
                "type": "object"
            },
            "Production.TransactionHistory(Updateable)": {
                "properties": {
                    "ActualCost": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReferenceOrderID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReferenceOrderLineID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "TransactionDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "TransactionType": {
                        "$ref": "#/components/schemas/NChar(Required,1)"
                    }
                },
                "type": "object"
            },
            "Production.TransactionHistory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.TransactionHistory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.TransactionHistory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ActualCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReferenceOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReferenceOrderLineID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TransactionDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "TransactionID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TransactionType": {
                        "$ref": "#/components/schemas/NChar(Optional,1)"
                    }
                },
                "type": "object"
            },
            "Production.TransactionHistory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.TransactionHistory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.TransactionHistoryArchive(Optional)": {
                "properties": {
                    "ActualCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReferenceOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReferenceOrderLineID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TransactionDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "TransactionID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TransactionType": {
                        "$ref": "#/components/schemas/NChar(Optional,1)"
                    }
                },
                "type": "object"
            },
            "Production.TransactionHistoryArchive(Updateable)": {
                "properties": {
                    "ActualCost": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReferenceOrderID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReferenceOrderLineID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "TransactionDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "TransactionID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "TransactionType": {
                        "$ref": "#/components/schemas/NChar(Required,1)"
                    }
                },
                "type": "object"
            },
            "Production.TransactionHistoryArchive.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.TransactionHistoryArchive.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.TransactionHistoryArchive.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ActualCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReferenceOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReferenceOrderLineID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TransactionDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "TransactionID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TransactionType": {
                        "$ref": "#/components/schemas/NChar(Optional,1)"
                    }
                },
                "type": "object"
            },
            "Production.TransactionHistoryArchive.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.TransactionHistoryArchive.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.UnitMeasure(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "UnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    }
                },
                "type": "object"
            },
            "Production.UnitMeasure(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "UnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Required,3)"
                    }
                },
                "type": "object"
            },
            "Production.UnitMeasure.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.UnitMeasure.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.UnitMeasure.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "UnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    }
                },
                "type": "object"
            },
            "Production.UnitMeasure.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.UnitMeasure.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.WorkOrder(Optional)": {
                "properties": {
                    "DueDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OrderQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ScrapReasonID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ScrappedQty": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "StockedQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "WorkOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.WorkOrder(Updateable)": {
                "properties": {
                    "DueDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "OrderQty": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ScrapReasonID": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "ScrappedQty": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Production.WorkOrder.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.WorkOrder.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.WorkOrder.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "DueDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OrderQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ScrapReasonID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ScrappedQty": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "StockedQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "WorkOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.WorkOrder.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.WorkOrder.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Production.WorkOrderRouting(Optional)": {
                "properties": {
                    "ActualCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ActualEndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ActualResourceHrs": {
                        "$ref": "#/components/schemas/Decimal(Optional,9,4)"
                    },
                    "ActualStartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "LocationID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OperationSequence": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "PlannedCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ScheduledEndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ScheduledStartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "WorkOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.WorkOrderRouting(Updateable)": {
                "properties": {
                    "ActualCost": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "ActualEndDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ActualResourceHrs": {
                        "$ref": "#/components/schemas/Decimal(Required,9,4)"
                    },
                    "ActualStartDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "LocationID": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "OperationSequence": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "PlannedCost": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ScheduledEndDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ScheduledStartDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "WorkOrderID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Production.WorkOrderRouting.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Production.WorkOrderRouting.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Production.WorkOrderRouting.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ActualCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ActualEndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ActualResourceHrs": {
                        "$ref": "#/components/schemas/Decimal(Optional,9,4)"
                    },
                    "ActualStartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "LocationID": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OperationSequence": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "PlannedCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ScheduledEndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ScheduledStartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "WorkOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Production.WorkOrderRouting.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Production.WorkOrderRouting.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Purchasing.ProductVendor(Optional)": {
                "properties": {
                    "AverageLeadTime": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "LastReceiptCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "LastReceiptDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "MaxOrderQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "MinOrderQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OnOrderQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StandardPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "UnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    }
                },
                "type": "object"
            },
            "Purchasing.ProductVendor(Updateable)": {
                "properties": {
                    "AverageLeadTime": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "LastReceiptCost": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "LastReceiptDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "MaxOrderQty": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "MinOrderQty": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "OnOrderQty": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "StandardPrice": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "UnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Required,3)"
                    }
                },
                "type": "object"
            },
            "Purchasing.ProductVendor.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Purchasing.ProductVendor.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Purchasing.ProductVendor.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "AverageLeadTime": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "LastReceiptCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "LastReceiptDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "MaxOrderQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "MinOrderQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OnOrderQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StandardPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "UnitMeasureCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    }
                },
                "type": "object"
            },
            "Purchasing.ProductVendor.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Purchasing.ProductVendor.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Purchasing.PurchaseOrderDetail(Optional)": {
                "properties": {
                    "DueDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "LineTotal": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OrderQty": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "PurchaseOrderDetailID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "PurchaseOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReceivedQty": {
                        "$ref": "#/components/schemas/Decimal(Optional,8,2)"
                    },
                    "RejectedQty": {
                        "$ref": "#/components/schemas/Decimal(Optional,8,2)"
                    },
                    "StockedQty": {
                        "$ref": "#/components/schemas/Decimal(Optional,9,2)"
                    },
                    "UnitPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    }
                },
                "type": "object"
            },
            "Purchasing.PurchaseOrderDetail(Updateable)": {
                "properties": {
                    "DueDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "OrderQty": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "PurchaseOrderID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReceivedQty": {
                        "$ref": "#/components/schemas/Decimal(Required,8,2)"
                    },
                    "RejectedQty": {
                        "$ref": "#/components/schemas/Decimal(Required,8,2)"
                    },
                    "UnitPrice": {
                        "$ref": "#/components/schemas/Money(Required)"
                    }
                },
                "type": "object"
            },
            "Purchasing.PurchaseOrderDetail.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Purchasing.PurchaseOrderDetail.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Purchasing.PurchaseOrderDetail.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "DueDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "LineTotal": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OrderQty": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "PurchaseOrderDetailID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "PurchaseOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ReceivedQty": {
                        "$ref": "#/components/schemas/Decimal(Optional,8,2)"
                    },
                    "RejectedQty": {
                        "$ref": "#/components/schemas/Decimal(Optional,8,2)"
                    },
                    "StockedQty": {
                        "$ref": "#/components/schemas/Decimal(Optional,9,2)"
                    },
                    "UnitPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    }
                },
                "type": "object"
            },
            "Purchasing.PurchaseOrderDetail.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Purchasing.PurchaseOrderDetail.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Purchasing.PurchaseOrderHeader(Optional)": {
                "properties": {
                    "EmployeeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Freight": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OrderDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PurchaseOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "RevisionNumber": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "ShipDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ShipMethodID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "SubTotal": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TaxAmt": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TotalDue": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "VendorID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Purchasing.PurchaseOrderHeader(Updateable)": {
                "properties": {
                    "EmployeeID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Freight": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "OrderDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "RevisionNumber": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "ShipDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ShipMethodID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "SubTotal": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "TaxAmt": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "VendorID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Purchasing.PurchaseOrderHeader.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Purchasing.PurchaseOrderHeader.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Purchasing.PurchaseOrderHeader.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "EmployeeID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Freight": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OrderDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PurchaseOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "RevisionNumber": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "ShipDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ShipMethodID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "SubTotal": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TaxAmt": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TotalDue": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "VendorID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Purchasing.PurchaseOrderHeader.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Purchasing.PurchaseOrderHeader.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Purchasing.ShipMethod(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ShipBase": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ShipMethodID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ShipRate": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Purchasing.ShipMethod(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ShipBase": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "ShipRate": {
                        "$ref": "#/components/schemas/Money(Required)"
                    }
                },
                "type": "object"
            },
            "Purchasing.ShipMethod.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Purchasing.ShipMethod.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Purchasing.ShipMethod.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ShipBase": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ShipMethodID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ShipRate": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Purchasing.ShipMethod.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Purchasing.ShipMethod.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Purchasing.Vendor(Optional)": {
                "properties": {
                    "AccountNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "ActiveFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CreditRating": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "PreferredVendorStatus": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "PurchasingWebServiceURL": {
                        "$ref": "#/components/schemas/NVarChar(Optional,1024)"
                    }
                },
                "type": "object"
            },
            "Purchasing.Vendor(Updateable)": {
                "properties": {
                    "AccountNumber": {
                        "$ref": "#/components/schemas/NVarChar(Required,15)"
                    },
                    "ActiveFlag": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "CreditRating": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "PreferredVendorStatus": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "PurchasingWebServiceURL": {
                        "$ref": "#/components/schemas/NVarChar(Required,1024)"
                    }
                },
                "type": "object"
            },
            "Purchasing.Vendor.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Purchasing.Vendor.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Purchasing.Vendor.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "AccountNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "ActiveFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CreditRating": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "PreferredVendorStatus": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "PurchasingWebServiceURL": {
                        "$ref": "#/components/schemas/NVarChar(Optional,1024)"
                    }
                },
                "type": "object"
            },
            "Purchasing.Vendor.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Purchasing.Vendor.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.CountryRegionCurrency(Optional)": {
                "properties": {
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,3)"
                    },
                    "CurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.CountryRegionCurrency(Updateable)": {
                "properties": {
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Required,3)"
                    },
                    "CurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Required,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.CountryRegionCurrency.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.CountryRegionCurrency.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.CountryRegionCurrency.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,3)"
                    },
                    "CurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.CountryRegionCurrency.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.CountryRegionCurrency.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.CreditCard(Optional)": {
                "properties": {
                    "CardNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "CardType": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "CreditCardID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ExpMonth": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "ExpYear": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.CreditCard(Updateable)": {
                "properties": {
                    "CardNumber": {
                        "$ref": "#/components/schemas/NVarChar(Required,25)"
                    },
                    "CardType": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ExpMonth": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "ExpYear": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.CreditCard.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.CreditCard.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.CreditCard.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "CardNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "CardType": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "CreditCardID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ExpMonth": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "ExpYear": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.CreditCard.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.CreditCard.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.Currency(Optional)": {
                "properties": {
                    "CurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Sales.Currency(Updateable)": {
                "properties": {
                    "CurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Required,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Sales.Currency.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.Currency.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.Currency.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "CurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "Sales.Currency.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.Currency.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.CurrencyRate(Optional)": {
                "properties": {
                    "AverageRate": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "CurrencyRateDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "CurrencyRateID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "EndOfDayRate": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "FromCurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ToCurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    }
                },
                "type": "object"
            },
            "Sales.CurrencyRate(Updateable)": {
                "properties": {
                    "AverageRate": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "CurrencyRateDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "EndOfDayRate": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "FromCurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Required,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ToCurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Required,3)"
                    }
                },
                "type": "object"
            },
            "Sales.CurrencyRate.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.CurrencyRate.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.CurrencyRate.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "AverageRate": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "CurrencyRateDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "CurrencyRateID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "EndOfDayRate": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "FromCurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ToCurrencyCode": {
                        "$ref": "#/components/schemas/NChar(Optional,3)"
                    }
                },
                "type": "object"
            },
            "Sales.CurrencyRate.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.CurrencyRate.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.Customer(Optional)": {
                "properties": {
                    "AccountNumber": {
                        "$ref": "#/components/schemas/VarChar(Optional,10)"
                    },
                    "CustomerID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PersonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StoreID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.Customer(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "PersonID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "StoreID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.Customer.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.Customer.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.Customer.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "AccountNumber": {
                        "$ref": "#/components/schemas/VarChar(Optional,10)"
                    },
                    "CustomerID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PersonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StoreID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.Customer.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.Customer.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.PersonCreditCard(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CreditCardID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.PersonCreditCard(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "CreditCardID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.PersonCreditCard.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.PersonCreditCard.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.PersonCreditCard.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CreditCardID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.PersonCreditCard.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.PersonCreditCard.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SalesOrderDetail(Optional)": {
                "properties": {
                    "CarrierTrackingNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "LineTotal": {
                        "$ref": "#/components/schemas/Decimal(Optional,38,6)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OrderQty": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SalesOrderDetailID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SalesOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SpecialOfferID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "UnitPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "UnitPriceDiscount": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderDetail(Updateable)": {
                "properties": {
                    "CarrierTrackingNumber": {
                        "$ref": "#/components/schemas/NVarChar(Required,25)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "OrderQty": {
                        "$ref": "#/components/schemas/SmallInt(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "SalesOrderID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "SpecialOfferID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "UnitPrice": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "UnitPriceDiscount": {
                        "$ref": "#/components/schemas/Money(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderDetail.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SalesOrderDetail.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderDetail.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "CarrierTrackingNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "LineTotal": {
                        "$ref": "#/components/schemas/Decimal(Optional,38,6)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OrderQty": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SalesOrderDetailID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SalesOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SpecialOfferID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "UnitPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "UnitPriceDiscount": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderDetail.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SalesOrderDetail.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SalesOrderHeader(Optional)": {
                "properties": {
                    "AccountNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "BillToAddressID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Comment": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    },
                    "CreditCardApprovalCode": {
                        "$ref": "#/components/schemas/VarChar(Optional,15)"
                    },
                    "CreditCardID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CurrencyRateID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CustomerID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "DueDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Freight": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OnlineOrderFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "OrderDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PurchaseOrderNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "RevisionNumber": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "SalesOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SalesOrderNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "SalesPersonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ShipDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ShipMethodID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ShipToAddressID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "SubTotal": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TaxAmt": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TotalDue": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderHeader(Updateable)": {
                "properties": {
                    "AccountNumber": {
                        "$ref": "#/components/schemas/NVarChar(Required,15)"
                    },
                    "BillToAddressID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Comment": {
                        "$ref": "#/components/schemas/NVarChar(Required,128)"
                    },
                    "CreditCardApprovalCode": {
                        "$ref": "#/components/schemas/VarChar(Required,15)"
                    },
                    "CreditCardID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "CurrencyRateID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "CustomerID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "DueDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Freight": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "OnlineOrderFlag": {
                        "$ref": "#/components/schemas/Bit(Required)"
                    },
                    "OrderDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "PurchaseOrderNumber": {
                        "$ref": "#/components/schemas/NVarChar(Required,25)"
                    },
                    "RevisionNumber": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "SalesPersonID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ShipDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ShipMethodID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ShipToAddressID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    },
                    "SubTotal": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "TaxAmt": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderHeader.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SalesOrderHeader.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderHeader.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "AccountNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "BillToAddressID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Comment": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    },
                    "CreditCardApprovalCode": {
                        "$ref": "#/components/schemas/VarChar(Optional,15)"
                    },
                    "CreditCardID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CurrencyRateID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CustomerID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "DueDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Freight": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "OnlineOrderFlag": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "OrderDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "PurchaseOrderNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "RevisionNumber": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "SalesOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SalesOrderNumber": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "SalesPersonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ShipDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ShipMethodID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ShipToAddressID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "SubTotal": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TaxAmt": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TotalDue": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderHeader.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SalesOrderHeader.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SalesOrderHeaderSalesReason(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SalesOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SalesReasonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderHeaderSalesReason(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "SalesOrderID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "SalesReasonID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderHeaderSalesReason.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SalesOrderHeaderSalesReason.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderHeaderSalesReason.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SalesOrderID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SalesReasonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesOrderHeaderSalesReason.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SalesOrderHeaderSalesReason.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SalesPerson(Optional)": {
                "properties": {
                    "Bonus": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CommissionPct": {
                        "$ref": "#/components/schemas/SmallMoney(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SalesLastYear": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "SalesQuota": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "SalesYTD": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesPerson(Updateable)": {
                "properties": {
                    "Bonus": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "CommissionPct": {
                        "$ref": "#/components/schemas/SmallMoney(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "SalesLastYear": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "SalesQuota": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "SalesYTD": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesPerson.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SalesPerson.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesPerson.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "Bonus": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "CommissionPct": {
                        "$ref": "#/components/schemas/SmallMoney(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SalesLastYear": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "SalesQuota": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "SalesYTD": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesPerson.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SalesPerson.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SalesPersonQuotaHistory(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "QuotaDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SalesQuota": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesPersonQuotaHistory(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "QuotaDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "SalesQuota": {
                        "$ref": "#/components/schemas/Money(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesPersonQuotaHistory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SalesPersonQuotaHistory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesPersonQuotaHistory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "QuotaDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SalesQuota": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesPersonQuotaHistory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SalesPersonQuotaHistory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SalesReason(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ReasonType": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "SalesReasonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesReason(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ReasonType": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesReason.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SalesReason.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesReason.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ReasonType": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "SalesReasonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesReason.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SalesReason.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SalesTaxRate(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "SalesTaxRateID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StateProvinceID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TaxRate": {
                        "$ref": "#/components/schemas/SmallMoney(Optional)"
                    },
                    "TaxType": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTaxRate(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "StateProvinceID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "TaxRate": {
                        "$ref": "#/components/schemas/SmallMoney(Required)"
                    },
                    "TaxType": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTaxRate.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SalesTaxRate.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTaxRate.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "SalesTaxRateID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StateProvinceID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "TaxRate": {
                        "$ref": "#/components/schemas/SmallMoney(Optional)"
                    },
                    "TaxType": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTaxRate.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SalesTaxRate.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SalesTerritory(Optional)": {
                "properties": {
                    "CostLastYear": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "CostYTD": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,3)"
                    },
                    "Group": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "SalesLastYear": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "SalesYTD": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTerritory(Updateable)": {
                "properties": {
                    "CostLastYear": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "CostYTD": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Required,3)"
                    },
                    "Group": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "SalesLastYear": {
                        "$ref": "#/components/schemas/Money(Required)"
                    },
                    "SalesYTD": {
                        "$ref": "#/components/schemas/Money(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTerritory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SalesTerritory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTerritory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "CostLastYear": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "CostYTD": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "CountryRegionCode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,3)"
                    },
                    "Group": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "SalesLastYear": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "SalesYTD": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTerritory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SalesTerritory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SalesTerritoryHistory(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTerritoryHistory(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTerritoryHistory.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SalesTerritoryHistory.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTerritoryHistory.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "TerritoryID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SalesTerritoryHistory.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SalesTerritoryHistory.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.ShoppingCartItem(Optional)": {
                "properties": {
                    "DateCreated": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ShoppingCartID": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ShoppingCartItemID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.ShoppingCartItem(Updateable)": {
                "properties": {
                    "DateCreated": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ShoppingCartID": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Sales.ShoppingCartItem.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.ShoppingCartItem.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.ShoppingCartItem.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "DateCreated": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Quantity": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ShoppingCartID": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ShoppingCartItemID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.ShoppingCartItem.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.ShoppingCartItem.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SpecialOffer(Optional)": {
                "properties": {
                    "Category": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "Description": {
                        "$ref": "#/components/schemas/NVarChar(Optional,255)"
                    },
                    "DiscountPct": {
                        "$ref": "#/components/schemas/SmallMoney(Optional)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "MaxQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "MinQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SpecialOfferID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Type": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SpecialOffer(Updateable)": {
                "properties": {
                    "Category": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "Description": {
                        "$ref": "#/components/schemas/NVarChar(Required,255)"
                    },
                    "DiscountPct": {
                        "$ref": "#/components/schemas/SmallMoney(Required)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "MaxQty": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "MinQty": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Type": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    }
                },
                "type": "object"
            },
            "Sales.SpecialOffer.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SpecialOffer.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SpecialOffer.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "Category": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "Description": {
                        "$ref": "#/components/schemas/NVarChar(Optional,255)"
                    },
                    "DiscountPct": {
                        "$ref": "#/components/schemas/SmallMoney(Optional)"
                    },
                    "EndDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "MaxQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "MinQty": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SpecialOfferID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StartDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Type": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SpecialOffer.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SpecialOffer.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.SpecialOfferProduct(Optional)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SpecialOfferID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SpecialOfferProduct(Updateable)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "SpecialOfferID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.SpecialOfferProduct.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.SpecialOfferProduct.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.SpecialOfferProduct.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "SpecialOfferID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.SpecialOfferProduct.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.SpecialOfferProduct.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "Sales.Store(Optional)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Demographics": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "SalesPersonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.Store(Updateable)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "Demographics": {
                        "$ref": "#/components/schemas/Xml(Required)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Required,50)"
                    },
                    "SalesPersonID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "Sales.Store.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/Sales.Store.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "Sales.Store.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "Demographics": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Name": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "SalesPersonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "rowguid": {
                        "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                    }
                },
                "type": "object"
            },
            "Sales.Store.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/Sales.Store.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "SmallInt(Optional)": {
                "format": "int32",
                "maximum": 32767,
                "minimum": -32768,
                "nullable": true,
                "type": "integer"
            },
            "SmallInt(Required)": {
                "format": "int32",
                "maximum": 32767,
                "minimum": -32768,
                "required": true,
                "type": "integer"
            },
            "SmallMoney(Optional)": {
                "format": "float",
                "maximum": 214748.3647,
                "minimum": -214748.3648,
                "nullable": true,
                "type": "number"
            },
            "SmallMoney(Required)": {
                "format": "float",
                "maximum": 214748.3647,
                "minimum": -214748.3648,
                "required": true,
                "type": "number"
            },
            "Time(Optional,7)": {
                "format": "time",
                "maximum": 863999999999,
                "minimum": 0,
                "nullable": true,
                "type": "string"
            },
            "Time(Required,7)": {
                "format": "time",
                "maximum": 863999999999,
                "minimum": 0,
                "required": true,
                "type": "string"
            },
            "TinyInt(Optional)": {
                "format": "int32",
                "maximum": 255,
                "minimum": 0,
                "nullable": true,
                "type": "integer"
            },
            "TinyInt(Required)": {
                "format": "int32",
                "maximum": 255,
                "minimum": 0,
                "required": true,
                "type": "integer"
            },
            "UniqueIdentifier(Optional)": {
                "format": "uuid",
                "nullable": true,
                "pattern": "^[{(]?[0-9A-F]{8}[-]?([0-9A-F]{4}[-]?){3}[0-9A-F]{12}[)}]?$",
                "type": "string"
            },
            "VarBinary(Optional,Max)": {
                "format": "binary",
                "maxLength": 2863311528,
                "nullable": true,
                "type": "string"
            },
            "VarBinary(Required,Max)": {
                "format": "binary",
                "maxLength": 2863311528,
                "required": true,
                "type": "string"
            },
            "VarChar(Optional,10)": {
                "maxLength": 10,
                "nullable": true,
                "pattern": "^[\\x00-\\x7F]*$",
                "type": "string"
            },
            "VarChar(Optional,128)": {
                "maxLength": 128,
                "nullable": true,
                "pattern": "^[\\x00-\\x7F]*$",
                "type": "string"
            },
            "VarChar(Optional,15)": {
                "maxLength": 15,
                "nullable": true,
                "pattern": "^[\\x00-\\x7F]*$",
                "type": "string"
            },
            "VarChar(Optional,50)": {
                "maxLength": 50,
                "nullable": true,
                "pattern": "^[\\x00-\\x7F]*$",
                "type": "string"
            },
            "VarChar(Optional,8)": {
                "maxLength": 8,
                "nullable": true,
                "pattern": "^[\\x00-\\x7F]*$",
                "type": "string"
            },
            "VarChar(Required,10)": {
                "maxLength": 10,
                "pattern": "^[\\x00-\\x7F]*$",
                "required": true,
                "type": "string"
            },
            "VarChar(Required,128)": {
                "maxLength": 128,
                "pattern": "^[\\x00-\\x7F]*$",
                "required": true,
                "type": "string"
            },
            "VarChar(Required,15)": {
                "maxLength": 15,
                "pattern": "^[\\x00-\\x7F]*$",
                "required": true,
                "type": "string"
            },
            "Xml(Optional)": {
                "nullable": true,
                "type": "string"
            },
            "Xml(Required)": {
                "required": true,
                "type": "string"
            },
            "dbo.AWBuildVersion(Optional)": {
                "properties": {
                    "Database%20Version": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SystemInformationID": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "VersionDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.AWBuildVersion(Updateable)": {
                "properties": {
                    "Database%20Version": {
                        "$ref": "#/components/schemas/NVarChar(Required,25)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "VersionDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.AWBuildVersion.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.AWBuildVersion.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "dbo.AWBuildVersion.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "Database%20Version": {
                        "$ref": "#/components/schemas/NVarChar(Optional,25)"
                    },
                    "ModifiedDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "SystemInformationID": {
                        "$ref": "#/components/schemas/TinyInt(Optional)"
                    },
                    "VersionDate": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.AWBuildVersion.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.AWBuildVersion.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.DatabaseLog(Optional)": {
                "properties": {
                    "DatabaseLogID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "DatabaseUser": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    },
                    "Event": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    },
                    "Object": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    },
                    "PostTime": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Schema": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    },
                    "TSQL": {
                        "$ref": "#/components/schemas/NVarChar(Optional,Max)"
                    },
                    "XmlEvent": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.DatabaseLog(Updateable)": {
                "properties": {
                    "DatabaseUser": {
                        "$ref": "#/components/schemas/NVarChar(Required,128)"
                    },
                    "Event": {
                        "$ref": "#/components/schemas/NVarChar(Required,128)"
                    },
                    "Object": {
                        "$ref": "#/components/schemas/NVarChar(Required,128)"
                    },
                    "PostTime": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "Schema": {
                        "$ref": "#/components/schemas/NVarChar(Required,128)"
                    },
                    "TSQL": {
                        "$ref": "#/components/schemas/NVarChar(Required,Max)"
                    },
                    "XmlEvent": {
                        "$ref": "#/components/schemas/Xml(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.DatabaseLog.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.DatabaseLog.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "dbo.DatabaseLog.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "DatabaseLogID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "DatabaseUser": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    },
                    "Event": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    },
                    "Object": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    },
                    "PostTime": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "Schema": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    },
                    "TSQL": {
                        "$ref": "#/components/schemas/NVarChar(Optional,Max)"
                    },
                    "XmlEvent": {
                        "$ref": "#/components/schemas/Xml(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.DatabaseLog.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.DatabaseLog.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.ErrorLog(Optional)": {
                "properties": {
                    "ErrorLine": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ErrorLogID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ErrorMessage": {
                        "$ref": "#/components/schemas/NVarChar(Optional,4000)"
                    },
                    "ErrorNumber": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ErrorProcedure": {
                        "$ref": "#/components/schemas/NVarChar(Optional,126)"
                    },
                    "ErrorSeverity": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ErrorState": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ErrorTime": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "UserName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    }
                },
                "type": "object"
            },
            "dbo.ErrorLog(Updateable)": {
                "properties": {
                    "ErrorLine": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ErrorMessage": {
                        "$ref": "#/components/schemas/NVarChar(Required,4000)"
                    },
                    "ErrorNumber": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ErrorProcedure": {
                        "$ref": "#/components/schemas/NVarChar(Required,126)"
                    },
                    "ErrorSeverity": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ErrorState": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ErrorTime": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "UserName": {
                        "$ref": "#/components/schemas/NVarChar(Required,128)"
                    }
                },
                "type": "object"
            },
            "dbo.ErrorLog.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.ErrorLog.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "dbo.ErrorLog.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "ErrorLine": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ErrorLogID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ErrorMessage": {
                        "$ref": "#/components/schemas/NVarChar(Optional,4000)"
                    },
                    "ErrorNumber": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ErrorProcedure": {
                        "$ref": "#/components/schemas/NVarChar(Optional,126)"
                    },
                    "ErrorSeverity": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ErrorState": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ErrorTime": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    },
                    "UserName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,128)"
                    }
                },
                "type": "object"
            },
            "dbo.ErrorLog.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.ErrorLog.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.LocationTableType(Required,ChildrenRequired)": {
                "properties": {
                    "CostRate": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "LocationName": {
                        "$ref": "#/components/schemas/VarChar(Optional,50)"
                    }
                },
                "type": "object"
            },
            "dbo.LocationTableType(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.LocationTableType(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.ufnGetAccountingEndDate.Request": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetAccountingEndDate.Response": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetAccountingStartDate.Request": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetAccountingStartDate.Response": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/DateTime(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetContactInformation.Request": {
                "properties": {
                    "PersonID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetContactInformation.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.ufnGetContactInformation.Response.Columns(Required,ChildrenRequired,Array)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetContactInformation.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityType": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "FirstName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "JobTitle": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "LastName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "PersonID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetContactInformation.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.ufnGetContactInformation.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.ufnGetDocumentStatusText.Request": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/NVarChar(Optional,16)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetDocumentStatusText.Response": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/NVarChar(Optional,16)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetProductDealerPrice.Request": {
                "properties": {
                    "OrderDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReturnValue": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetProductDealerPrice.Response": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetProductListPrice.Request": {
                "properties": {
                    "OrderDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReturnValue": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetProductListPrice.Response": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetProductStandardCost.Request": {
                "properties": {
                    "OrderDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReturnValue": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetProductStandardCost.Response": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetPurchaseOrderStatusText.Request": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetPurchaseOrderStatusText.Response": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetSalesOrderStatusText.Request": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/TinyInt(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetSalesOrderStatusText.Response": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/NVarChar(Optional,15)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetStock.Request": {
                "properties": {
                    "ProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "ReturnValue": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnGetStock.Response": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnLeadingZeros.Request": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/VarChar(Optional,8)"
                    },
                    "Value": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.ufnLeadingZeros.Response": {
                "properties": {
                    "ReturnValue": {
                        "$ref": "#/components/schemas/VarChar(Optional,8)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetBillOfMaterials.Request": {
                "properties": {
                    "CheckDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "StartProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetBillOfMaterials.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials.Response.Columns(Required,ChildrenRequired,Array)"
                    },
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetBillOfMaterials.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BOMLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ComponentDesc": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ComponentID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ListPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ProductAssemblyID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "RecursionLevel": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StandardCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TotalQuantity": {
                        "$ref": "#/components/schemas/Decimal(Optional,38,2)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetBillOfMaterials.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.uspGetBillOfMaterials1.Request": {
                "properties": {
                    "CheckDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "LOC": {
                        "$ref": "#/components/schemas/dbo.LocationTableType(Required,ChildrenRequired,Array)"
                    },
                    "PHN": {
                        "$ref": "#/components/schemas/NVarChar(Required,25)"
                    },
                    "StartProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetBillOfMaterials1.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials1.Response.Columns(Required,ChildrenRequired,Array)"
                    },
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetBillOfMaterials1.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BOMLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ComponentDesc": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ComponentID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ListPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ProductAssemblyID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "RecursionLevel": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StandardCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TotalQuantity": {
                        "$ref": "#/components/schemas/Decimal(Optional,38,2)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetBillOfMaterials1.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials1.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.uspGetBillOfMaterials2.Request": {
                "properties": {
                    "CheckDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "LOC": {
                        "$ref": "#/components/schemas/dbo.LocationTableType(Required,ChildrenRequired,Array)"
                    },
                    "PHN": {
                        "$ref": "#/components/schemas/NVarChar(Required,25)"
                    },
                    "StartProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetBillOfMaterials2.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials2.Response.Columns(Required,ChildrenRequired,Array)"
                    },
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetBillOfMaterials2.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BOMLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ComponentDesc": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ComponentID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ListPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ProductAssemblyID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "RecursionLevel": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StandardCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TotalQuantity": {
                        "$ref": "#/components/schemas/Decimal(Optional,38,2)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetBillOfMaterials2.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials2.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.uspGetEmployeeManagers.Request": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetEmployeeManagers.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.uspGetEmployeeManagers.Response.Columns(Required,ChildrenRequired,Array)"
                    },
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetEmployeeManagers.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "FirstName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "LastName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ManagerFirstName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ManagerLastName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "OrganizationNode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,4000)"
                    },
                    "RecursionLevel": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetEmployeeManagers.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.uspGetEmployeeManagers.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.uspGetManagerEmployees.Request": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetManagerEmployees.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.uspGetManagerEmployees.Response.Columns(Required,ChildrenRequired,Array)"
                    },
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetManagerEmployees.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BusinessEntityID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "FirstName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "LastName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ManagerFirstName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ManagerLastName": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "OrganizationNode": {
                        "$ref": "#/components/schemas/NVarChar(Optional,4000)"
                    },
                    "RecursionLevel": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetManagerEmployees.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.uspGetManagerEmployees.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.uspGetWhereUsedProductID.Request": {
                "properties": {
                    "CheckDate": {
                        "$ref": "#/components/schemas/DateTime(Required)"
                    },
                    "StartProductID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetWhereUsedProductID.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.uspGetWhereUsedProductID.Response.Columns(Required,ChildrenRequired,Array)"
                    },
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetWhereUsedProductID.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "BOMLevel": {
                        "$ref": "#/components/schemas/SmallInt(Optional)"
                    },
                    "ComponentDesc": {
                        "$ref": "#/components/schemas/NVarChar(Optional,50)"
                    },
                    "ComponentID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "ListPrice": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "ProductAssemblyID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "RecursionLevel": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "StandardCost": {
                        "$ref": "#/components/schemas/Money(Optional)"
                    },
                    "TotalQuantity": {
                        "$ref": "#/components/schemas/Decimal(Optional,38,2)"
                    }
                },
                "type": "object"
            },
            "dbo.uspGetWhereUsedProductID.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.uspGetWhereUsedProductID.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "dbo.uspLogError.Request": {
                "properties": {
                    "ErrorLogID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    }
                },
                "type": "object"
            },
            "dbo.uspLogError.Response": {
                "properties": {
                    "ErrorLogID": {
                        "$ref": "#/components/schemas/Int(Required)"
                    },
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspSearchCandidateResumes.Request": {
                "properties": {
                    "language": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "searchString": {
                        "$ref": "#/components/schemas/NVarChar(Optional,1000)"
                    },
                    "useInflectional": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    },
                    "useThesaurus": {
                        "$ref": "#/components/schemas/Bit(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspSearchCandidateResumes.Response": {
                "properties": {
                    "$results": {
                        "$ref": "#/components/schemas/dbo.uspSearchCandidateResumes.Response.Columns(Required,ChildrenRequired,Array)"
                    },
                    "rv_72fc14241d264958a017e35e80db3b6a": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspSearchCandidateResumes.Response.Columns(Required,ChildrenRequired)": {
                "properties": {
                    "JobCandidateID": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    },
                    "RANK": {
                        "$ref": "#/components/schemas/Int(Optional)"
                    }
                },
                "type": "object"
            },
            "dbo.uspSearchCandidateResumes.Response.Columns(Required,ChildrenRequired,Array)": {
                "items": {
                    "$ref": "#/components/schemas/dbo.uspSearchCandidateResumes.Response.Columns(Required,ChildrenRequired)"
                },
                "type": "array"
            },
            "sys.geography(Optional)": {
                "format": "sys.geography",
                "nullable": true,
                "type": "string"
            },
            "sys.geography(Required)": {
                "format": "sys.geography",
                "required": true,
                "type": "string"
            },
            "sys.hierarchyid(Optional)": {
                "format": "sys.hierarchyid",
                "nullable": true,
                "pattern": "^\\/(-?[0-9]+(\\.-?[0-9]+)*\\/)*$",
                "type": "string"
            },
            "sys.hierarchyid(Required)": {
                "format": "sys.hierarchyid",
                "pattern": "^\\/(-?[0-9]+(\\.-?[0-9]+)*\\/)*$",
                "required": true,
                "type": "string"
            }
        }
    },
    "info": {
        "contact": {
            "email": "test@test.com",
            "name": "Test",
            "url": "http://example.org/"
        },
        "description": "Service",
        "license": {
            "name": "Proprietary",
            "url": "http://www.k2.com/proplic"
        },
        "termsOfService": "http://www.k2.com/tos",
        "title": "Service",
        "version": "1.0.0"
    },
    "openapi": "3.0.0",
    "paths": {
        "/DELETE/HumanResources/Department(DepartmentID)": {
            "delete": {
                "description": "Deletes `[HumanResources].[Department]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000005",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "DepartmentID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[Department]"
            }
        },
        "/DELETE/HumanResources/Department(Name)": {
            "delete": {
                "description": "Deletes `[HumanResources].[Department]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000006",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[Department]"
            }
        },
        "/DELETE/HumanResources/Employee(BusinessEntityID)": {
            "delete": {
                "description": "Deletes `[HumanResources].[Employee]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000015",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[Employee]"
            }
        },
        "/DELETE/HumanResources/Employee(LoginID)": {
            "delete": {
                "description": "Deletes `[HumanResources].[Employee]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000016",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "LoginID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,256)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[Employee]"
            }
        },
        "/DELETE/HumanResources/Employee(NationalIDNumber)": {
            "delete": {
                "description": "Deletes `[HumanResources].[Employee]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000017",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "NationalIDNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,15)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[Employee]"
            }
        },
        "/DELETE/HumanResources/Employee(rowguid)": {
            "delete": {
                "description": "Deletes `[HumanResources].[Employee]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000018",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[Employee]"
            }
        },
        "/DELETE/HumanResources/EmployeeDepartmentHistory(BusinessEntityID,StartDate,DepartmentID,ShiftID)": {
            "delete": {
                "description": "Deletes `[HumanResources].[EmployeeDepartmentHistory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000000a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StartDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Date(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "DepartmentID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ShiftID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TinyInt(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[EmployeeDepartmentHistory]"
            }
        },
        "/DELETE/HumanResources/EmployeePayHistory(BusinessEntityID,RateChangeDate)": {
            "delete": {
                "description": "Deletes `[HumanResources].[EmployeePayHistory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000000e",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "RateChangeDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[EmployeePayHistory]"
            }
        },
        "/DELETE/HumanResources/JobCandidate(JobCandidateID)": {
            "delete": {
                "description": "Deletes `[HumanResources].[JobCandidate]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000001c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "JobCandidateID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[JobCandidate]"
            }
        },
        "/DELETE/HumanResources/Shift(Name)": {
            "delete": {
                "description": "Deletes `[HumanResources].[Shift]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000023",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[Shift]"
            }
        },
        "/DELETE/HumanResources/Shift(ShiftID)": {
            "delete": {
                "description": "Deletes `[HumanResources].[Shift]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000022",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ShiftID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TinyInt(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[Shift]"
            }
        },
        "/DELETE/HumanResources/Shift(StartTime,EndTime)": {
            "delete": {
                "description": "Deletes `[HumanResources].[Shift]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000024",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "StartTime",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Time(Optional,7)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "EndTime",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Time(Optional,7)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [HumanResources].[Shift]"
            }
        },
        "/DELETE/Person/Address(AddressID)": {
            "delete": {
                "description": "Deletes `[Person].[Address]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000032",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "AddressID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[Address]"
            }
        },
        "/DELETE/Person/Address(AddressLine1,AddressLine2,City,StateProvinceID,PostalCode)": {
            "delete": {
                "description": "Deletes `[Person].[Address]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000034",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "AddressLine1",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,60)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "AddressLine2",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,60)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "City",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,30)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StateProvinceID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "PostalCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,15)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[Address]"
            }
        },
        "/DELETE/Person/Address(rowguid)": {
            "delete": {
                "description": "Deletes `[Person].[Address]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000033",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[Address]"
            }
        },
        "/DELETE/Person/AddressType(AddressTypeID)": {
            "delete": {
                "description": "Deletes `[Person].[AddressType]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000002a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "AddressTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[AddressType]"
            }
        },
        "/DELETE/Person/AddressType(Name)": {
            "delete": {
                "description": "Deletes `[Person].[AddressType]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000002c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[AddressType]"
            }
        },
        "/DELETE/Person/AddressType(rowguid)": {
            "delete": {
                "description": "Deletes `[Person].[AddressType]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000002b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[AddressType]"
            }
        },
        "/DELETE/Person/BusinessEntity(BusinessEntityID)": {
            "delete": {
                "description": "Deletes `[Person].[BusinessEntity]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000045",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[BusinessEntity]"
            }
        },
        "/DELETE/Person/BusinessEntity(rowguid)": {
            "delete": {
                "description": "Deletes `[Person].[BusinessEntity]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000046",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[BusinessEntity]"
            }
        },
        "/DELETE/Person/BusinessEntityAddress(BusinessEntityID,AddressID,AddressTypeID)": {
            "delete": {
                "description": "Deletes `[Person].[BusinessEntityAddress]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000039",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "AddressID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "AddressTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[BusinessEntityAddress]"
            }
        },
        "/DELETE/Person/BusinessEntityAddress(rowguid)": {
            "delete": {
                "description": "Deletes `[Person].[BusinessEntityAddress]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000003a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[BusinessEntityAddress]"
            }
        },
        "/DELETE/Person/BusinessEntityContact(BusinessEntityID,PersonID,ContactTypeID)": {
            "delete": {
                "description": "Deletes `[Person].[BusinessEntityContact]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000003f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "PersonID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ContactTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[BusinessEntityContact]"
            }
        },
        "/DELETE/Person/BusinessEntityContact(rowguid)": {
            "delete": {
                "description": "Deletes `[Person].[BusinessEntityContact]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000040",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[BusinessEntityContact]"
            }
        },
        "/DELETE/Person/ContactType(ContactTypeID)": {
            "delete": {
                "description": "Deletes `[Person].[ContactType]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000004b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ContactTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[ContactType]"
            }
        },
        "/DELETE/Person/ContactType(Name)": {
            "delete": {
                "description": "Deletes `[Person].[ContactType]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000004c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[ContactType]"
            }
        },
        "/DELETE/Person/CountryRegion(CountryRegionCode)": {
            "delete": {
                "description": "Deletes `[Person].[CountryRegion]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000051",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CountryRegionCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,3)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[CountryRegion]"
            }
        },
        "/DELETE/Person/CountryRegion(Name)": {
            "delete": {
                "description": "Deletes `[Person].[CountryRegion]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000052",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[CountryRegion]"
            }
        },
        "/DELETE/Person/EmailAddress(BusinessEntityID,EmailAddressID)": {
            "delete": {
                "description": "Deletes `[Person].[EmailAddress]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000056",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "EmailAddressID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[EmailAddress]"
            }
        },
        "/DELETE/Person/Password(BusinessEntityID)": {
            "delete": {
                "description": "Deletes `[Person].[Password]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000005a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[Password]"
            }
        },
        "/DELETE/Person/Person(BusinessEntityID)": {
            "delete": {
                "description": "Deletes `[Person].[Person]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000063",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[Person]"
            }
        },
        "/DELETE/Person/Person(rowguid)": {
            "delete": {
                "description": "Deletes `[Person].[Person]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000064",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[Person]"
            }
        },
        "/DELETE/Person/PersonPhone(BusinessEntityID,PhoneNumber,PhoneNumberTypeID)": {
            "delete": {
                "description": "Deletes `[Person].[PersonPhone]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000005e",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "PhoneNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,25)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "PhoneNumberTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[PersonPhone]"
            }
        },
        "/DELETE/Person/PhoneNumberType(PhoneNumberTypeID)": {
            "delete": {
                "description": "Deletes `[Person].[PhoneNumberType]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000068",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "PhoneNumberTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[PhoneNumberType]"
            }
        },
        "/DELETE/Person/StateProvince(Name)": {
            "delete": {
                "description": "Deletes `[Person].[StateProvince]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000070",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[StateProvince]"
            }
        },
        "/DELETE/Person/StateProvince(StateProvinceCode,CountryRegionCode)": {
            "delete": {
                "description": "Deletes `[Person].[StateProvince]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000071",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "StateProvinceCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "CountryRegionCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,3)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[StateProvince]"
            }
        },
        "/DELETE/Person/StateProvince(StateProvinceID)": {
            "delete": {
                "description": "Deletes `[Person].[StateProvince]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000006f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "StateProvinceID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[StateProvince]"
            }
        },
        "/DELETE/Person/StateProvince(rowguid)": {
            "delete": {
                "description": "Deletes `[Person].[StateProvince]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000072",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Person].[StateProvince]"
            }
        },
        "/DELETE/Production/BillOfMaterials(BillOfMaterialsID)": {
            "delete": {
                "description": "Deletes `[Production].[BillOfMaterials]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000078",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BillOfMaterialsID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[BillOfMaterials]"
            }
        },
        "/DELETE/Production/BillOfMaterials(ProductAssemblyID,ComponentID,StartDate)": {
            "delete": {
                "description": "Deletes `[Production].[BillOfMaterials]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000077",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductAssemblyID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ComponentID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StartDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[BillOfMaterials]"
            }
        },
        "/DELETE/Production/Culture(CultureID)": {
            "delete": {
                "description": "Deletes `[Production].[Culture]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000007d",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CultureID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,6)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Culture]"
            }
        },
        "/DELETE/Production/Culture(Name)": {
            "delete": {
                "description": "Deletes `[Production].[Culture]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000007e",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Culture]"
            }
        },
        "/DELETE/Production/Document(DocumentLevel,DocumentNode)": {
            "delete": {
                "description": "Deletes `[Production].[Document]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000085",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "DocumentLevel",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "DocumentNode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Document]"
            }
        },
        "/DELETE/Production/Document(DocumentNode)": {
            "delete": {
                "description": "Deletes `[Production].[Document]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000084",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "DocumentNode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Document]"
            }
        },
        "/DELETE/Production/Document(rowguid)": {
            "delete": {
                "description": "Deletes `[Production].[Document]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000086",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Document]"
            }
        },
        "/DELETE/Production/Illustration(IllustrationID)": {
            "delete": {
                "description": "Deletes `[Production].[Illustration]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000008a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "IllustrationID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Illustration]"
            }
        },
        "/DELETE/Production/Location(LocationID)": {
            "delete": {
                "description": "Deletes `[Production].[Location]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000008f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "LocationID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Location]"
            }
        },
        "/DELETE/Production/Location(Name)": {
            "delete": {
                "description": "Deletes `[Production].[Location]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000090",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Location]"
            }
        },
        "/DELETE/Production/Product(Name)": {
            "delete": {
                "description": "Deletes `[Production].[Product]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000db",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Product]"
            }
        },
        "/DELETE/Production/Product(ProductID)": {
            "delete": {
                "description": "Deletes `[Production].[Product]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000d9",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Product]"
            }
        },
        "/DELETE/Production/Product(ProductNumber)": {
            "delete": {
                "description": "Deletes `[Production].[Product]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000da",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,25)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Product]"
            }
        },
        "/DELETE/Production/Product(rowguid)": {
            "delete": {
                "description": "Deletes `[Production].[Product]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000dc",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[Product]"
            }
        },
        "/DELETE/Production/ProductCategory(Name)": {
            "delete": {
                "description": "Deletes `[Production].[ProductCategory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000097",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductCategory]"
            }
        },
        "/DELETE/Production/ProductCategory(ProductCategoryID)": {
            "delete": {
                "description": "Deletes `[Production].[ProductCategory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000096",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductCategoryID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductCategory]"
            }
        },
        "/DELETE/Production/ProductCategory(rowguid)": {
            "delete": {
                "description": "Deletes `[Production].[ProductCategory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000098",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductCategory]"
            }
        },
        "/DELETE/Production/ProductCostHistory(ProductID,StartDate)": {
            "delete": {
                "description": "Deletes `[Production].[ProductCostHistory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000009c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StartDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductCostHistory]"
            }
        },
        "/DELETE/Production/ProductDescription(ProductDescriptionID)": {
            "delete": {
                "description": "Deletes `[Production].[ProductDescription]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000a1",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductDescriptionID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductDescription]"
            }
        },
        "/DELETE/Production/ProductDescription(rowguid)": {
            "delete": {
                "description": "Deletes `[Production].[ProductDescription]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000a2",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductDescription]"
            }
        },
        "/DELETE/Production/ProductDocument(ProductID,DocumentNode)": {
            "delete": {
                "description": "Deletes `[Production].[ProductDocument]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000a6",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "DocumentNode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductDocument]"
            }
        },
        "/DELETE/Production/ProductInventory(ProductID,LocationID)": {
            "delete": {
                "description": "Deletes `[Production].[ProductInventory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000aa",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "LocationID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductInventory]"
            }
        },
        "/DELETE/Production/ProductListPriceHistory(ProductID,StartDate)": {
            "delete": {
                "description": "Deletes `[Production].[ProductListPriceHistory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ae",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StartDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductListPriceHistory]"
            }
        },
        "/DELETE/Production/ProductModel(Name)": {
            "delete": {
                "description": "Deletes `[Production].[ProductModel]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000bd",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductModel]"
            }
        },
        "/DELETE/Production/ProductModel(ProductModelID)": {
            "delete": {
                "description": "Deletes `[Production].[ProductModel]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000bc",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductModelID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductModel]"
            }
        },
        "/DELETE/Production/ProductModel(rowguid)": {
            "delete": {
                "description": "Deletes `[Production].[ProductModel]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000be",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductModel]"
            }
        },
        "/DELETE/Production/ProductModelIllustration(ProductModelID,IllustrationID)": {
            "delete": {
                "description": "Deletes `[Production].[ProductModelIllustration]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000b2",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductModelID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "IllustrationID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductModelIllustration]"
            }
        },
        "/DELETE/Production/ProductModelProductDescriptionCulture(ProductModelID,ProductDescriptionID,CultureID)": {
            "delete": {
                "description": "Deletes `[Production].[ProductModelProductDescriptionCulture]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000b6",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductModelID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ProductDescriptionID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "CultureID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,6)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductModelProductDescriptionCulture]"
            }
        },
        "/DELETE/Production/ProductPhoto(ProductPhotoID)": {
            "delete": {
                "description": "Deletes `[Production].[ProductPhoto]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000c2",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductPhotoID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductPhoto]"
            }
        },
        "/DELETE/Production/ProductProductPhoto(ProductID,ProductPhotoID)": {
            "delete": {
                "description": "Deletes `[Production].[ProductProductPhoto]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000c6",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ProductPhotoID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductProductPhoto]"
            }
        },
        "/DELETE/Production/ProductReview(ProductReviewID)": {
            "delete": {
                "description": "Deletes `[Production].[ProductReview]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ca",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductReviewID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductReview]"
            }
        },
        "/DELETE/Production/ProductSubcategory(Name)": {
            "delete": {
                "description": "Deletes `[Production].[ProductSubcategory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000d1",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductSubcategory]"
            }
        },
        "/DELETE/Production/ProductSubcategory(ProductSubcategoryID)": {
            "delete": {
                "description": "Deletes `[Production].[ProductSubcategory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000d0",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductSubcategoryID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductSubcategory]"
            }
        },
        "/DELETE/Production/ProductSubcategory(rowguid)": {
            "delete": {
                "description": "Deletes `[Production].[ProductSubcategory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000d2",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ProductSubcategory]"
            }
        },
        "/DELETE/Production/ScrapReason(Name)": {
            "delete": {
                "description": "Deletes `[Production].[ScrapReason]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000e2",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ScrapReason]"
            }
        },
        "/DELETE/Production/ScrapReason(ScrapReasonID)": {
            "delete": {
                "description": "Deletes `[Production].[ScrapReason]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000e1",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ScrapReasonID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[ScrapReason]"
            }
        },
        "/DELETE/Production/TransactionHistory(TransactionID)": {
            "delete": {
                "description": "Deletes `[Production].[TransactionHistory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ea",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "TransactionID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[TransactionHistory]"
            }
        },
        "/DELETE/Production/TransactionHistoryArchive(TransactionID)": {
            "delete": {
                "description": "Deletes `[Production].[TransactionHistoryArchive]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000e6",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "TransactionID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[TransactionHistoryArchive]"
            }
        },
        "/DELETE/Production/UnitMeasure(Name)": {
            "delete": {
                "description": "Deletes `[Production].[UnitMeasure]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000f0",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[UnitMeasure]"
            }
        },
        "/DELETE/Production/UnitMeasure(UnitMeasureCode)": {
            "delete": {
                "description": "Deletes `[Production].[UnitMeasure]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ef",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "UnitMeasureCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[UnitMeasure]"
            }
        },
        "/DELETE/Production/WorkOrder(WorkOrderID)": {
            "delete": {
                "description": "Deletes `[Production].[WorkOrder]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000f8",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "WorkOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[WorkOrder]"
            }
        },
        "/DELETE/Production/WorkOrderRouting(WorkOrderID,ProductID,OperationSequence)": {
            "delete": {
                "description": "Deletes `[Production].[WorkOrderRouting]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000f4",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "WorkOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "OperationSequence",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Production].[WorkOrderRouting]"
            }
        },
        "/DELETE/Purchasing/ProductVendor(ProductID,BusinessEntityID)": {
            "delete": {
                "description": "Deletes `[Purchasing].[ProductVendor]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000fc",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Purchasing].[ProductVendor]"
            }
        },
        "/DELETE/Purchasing/PurchaseOrderDetail(PurchaseOrderID,PurchaseOrderDetailID)": {
            "delete": {
                "description": "Deletes `[Purchasing].[PurchaseOrderDetail]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000100",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "PurchaseOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "PurchaseOrderDetailID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Purchasing].[PurchaseOrderDetail]"
            }
        },
        "/DELETE/Purchasing/PurchaseOrderHeader(PurchaseOrderID)": {
            "delete": {
                "description": "Deletes `[Purchasing].[PurchaseOrderHeader]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000104",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "PurchaseOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Purchasing].[PurchaseOrderHeader]"
            }
        },
        "/DELETE/Purchasing/ShipMethod(Name)": {
            "delete": {
                "description": "Deletes `[Purchasing].[ShipMethod]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000010b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Purchasing].[ShipMethod]"
            }
        },
        "/DELETE/Purchasing/ShipMethod(ShipMethodID)": {
            "delete": {
                "description": "Deletes `[Purchasing].[ShipMethod]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000010a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ShipMethodID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Purchasing].[ShipMethod]"
            }
        },
        "/DELETE/Purchasing/ShipMethod(rowguid)": {
            "delete": {
                "description": "Deletes `[Purchasing].[ShipMethod]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000010c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Purchasing].[ShipMethod]"
            }
        },
        "/DELETE/Purchasing/Vendor(AccountNumber)": {
            "delete": {
                "description": "Deletes `[Purchasing].[Vendor]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000112",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "AccountNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,15)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Purchasing].[Vendor]"
            }
        },
        "/DELETE/Purchasing/Vendor(BusinessEntityID)": {
            "delete": {
                "description": "Deletes `[Purchasing].[Vendor]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000111",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Purchasing].[Vendor]"
            }
        },
        "/DELETE/Sales/CountryRegionCurrency(CountryRegionCode,CurrencyCode)": {
            "delete": {
                "description": "Deletes `[Sales].[CountryRegionCurrency]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000116",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CountryRegionCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,3)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "CurrencyCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[CountryRegionCurrency]"
            }
        },
        "/DELETE/Sales/CreditCard(CardNumber)": {
            "delete": {
                "description": "Deletes `[Sales].[CreditCard]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000011c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CardNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,25)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[CreditCard]"
            }
        },
        "/DELETE/Sales/CreditCard(CreditCardID)": {
            "delete": {
                "description": "Deletes `[Sales].[CreditCard]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000011b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CreditCardID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[CreditCard]"
            }
        },
        "/DELETE/Sales/Currency(CurrencyCode)": {
            "delete": {
                "description": "Deletes `[Sales].[Currency]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000127",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CurrencyCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[Currency]"
            }
        },
        "/DELETE/Sales/Currency(Name)": {
            "delete": {
                "description": "Deletes `[Sales].[Currency]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000128",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[Currency]"
            }
        },
        "/DELETE/Sales/CurrencyRate(CurrencyRateDate,FromCurrencyCode,ToCurrencyCode)": {
            "delete": {
                "description": "Deletes `[Sales].[CurrencyRate]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000122",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CurrencyRateDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "FromCurrencyCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ToCurrencyCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[CurrencyRate]"
            }
        },
        "/DELETE/Sales/CurrencyRate(CurrencyRateID)": {
            "delete": {
                "description": "Deletes `[Sales].[CurrencyRate]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000121",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CurrencyRateID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[CurrencyRate]"
            }
        },
        "/DELETE/Sales/Customer(AccountNumber)": {
            "delete": {
                "description": "Deletes `[Sales].[Customer]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000130",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "AccountNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/VarChar(Optional,10)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[Customer]"
            }
        },
        "/DELETE/Sales/Customer(CustomerID)": {
            "delete": {
                "description": "Deletes `[Sales].[Customer]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000012e",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CustomerID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[Customer]"
            }
        },
        "/DELETE/Sales/Customer(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[Customer]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000012f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[Customer]"
            }
        },
        "/DELETE/Sales/PersonCreditCard(BusinessEntityID,CreditCardID)": {
            "delete": {
                "description": "Deletes `[Sales].[PersonCreditCard]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000134",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "CreditCardID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[PersonCreditCard]"
            }
        },
        "/DELETE/Sales/SalesOrderDetail(SalesOrderID,SalesOrderDetailID)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesOrderDetail]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000139",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "SalesOrderDetailID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesOrderDetail]"
            }
        },
        "/DELETE/Sales/SalesOrderDetail(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesOrderDetail]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000013a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesOrderDetail]"
            }
        },
        "/DELETE/Sales/SalesOrderHeader(SalesOrderID)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesOrderHeader]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000144",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesOrderHeader]"
            }
        },
        "/DELETE/Sales/SalesOrderHeader(SalesOrderNumber)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesOrderHeader]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000146",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesOrderNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,25)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesOrderHeader]"
            }
        },
        "/DELETE/Sales/SalesOrderHeader(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesOrderHeader]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000145",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesOrderHeader]"
            }
        },
        "/DELETE/Sales/SalesOrderHeaderSalesReason(SalesOrderID,SalesReasonID)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesOrderHeaderSalesReason]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000013e",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "SalesReasonID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesOrderHeaderSalesReason]"
            }
        },
        "/DELETE/Sales/SalesPerson(BusinessEntityID)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesPerson]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000151",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesPerson]"
            }
        },
        "/DELETE/Sales/SalesPerson(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesPerson]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000152",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesPerson]"
            }
        },
        "/DELETE/Sales/SalesPersonQuotaHistory(BusinessEntityID,QuotaDate)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesPersonQuotaHistory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000014b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "QuotaDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesPersonQuotaHistory]"
            }
        },
        "/DELETE/Sales/SalesPersonQuotaHistory(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesPersonQuotaHistory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000014c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesPersonQuotaHistory]"
            }
        },
        "/DELETE/Sales/SalesReason(SalesReasonID)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesReason]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000156",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesReasonID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesReason]"
            }
        },
        "/DELETE/Sales/SalesTaxRate(SalesTaxRateID)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesTaxRate]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000015c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesTaxRateID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesTaxRate]"
            }
        },
        "/DELETE/Sales/SalesTaxRate(StateProvinceID,TaxType)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesTaxRate]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000015d",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "StateProvinceID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "TaxType",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TinyInt(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesTaxRate]"
            }
        },
        "/DELETE/Sales/SalesTaxRate(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesTaxRate]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000015e",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesTaxRate]"
            }
        },
        "/DELETE/Sales/SalesTerritory(Name)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesTerritory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000016b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesTerritory]"
            }
        },
        "/DELETE/Sales/SalesTerritory(TerritoryID)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesTerritory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000016a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "TerritoryID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesTerritory]"
            }
        },
        "/DELETE/Sales/SalesTerritory(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesTerritory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000016c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesTerritory]"
            }
        },
        "/DELETE/Sales/SalesTerritoryHistory(BusinessEntityID,StartDate,TerritoryID)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesTerritoryHistory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000163",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StartDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "TerritoryID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesTerritoryHistory]"
            }
        },
        "/DELETE/Sales/SalesTerritoryHistory(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[SalesTerritoryHistory]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000164",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SalesTerritoryHistory]"
            }
        },
        "/DELETE/Sales/ShoppingCartItem(ShoppingCartItemID)": {
            "delete": {
                "description": "Deletes `[Sales].[ShoppingCartItem]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000170",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ShoppingCartItemID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[ShoppingCartItem]"
            }
        },
        "/DELETE/Sales/SpecialOffer(SpecialOfferID)": {
            "delete": {
                "description": "Deletes `[Sales].[SpecialOffer]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000017b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SpecialOfferID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SpecialOffer]"
            }
        },
        "/DELETE/Sales/SpecialOffer(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[SpecialOffer]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000017c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SpecialOffer]"
            }
        },
        "/DELETE/Sales/SpecialOfferProduct(SpecialOfferID,ProductID)": {
            "delete": {
                "description": "Deletes `[Sales].[SpecialOfferProduct]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000175",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SpecialOfferID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SpecialOfferProduct]"
            }
        },
        "/DELETE/Sales/SpecialOfferProduct(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[SpecialOfferProduct]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000176",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[SpecialOfferProduct]"
            }
        },
        "/DELETE/Sales/Store(BusinessEntityID)": {
            "delete": {
                "description": "Deletes `[Sales].[Store]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000181",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[Store]"
            }
        },
        "/DELETE/Sales/Store(rowguid)": {
            "delete": {
                "description": "Deletes `[Sales].[Store]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000182",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [Sales].[Store]"
            }
        },
        "/DELETE/dbo/AWBuildVersion(SystemInformationID)": {
            "delete": {
                "description": "Deletes `[dbo].[AWBuildVersion]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000186",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SystemInformationID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TinyInt(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [dbo].[AWBuildVersion]"
            }
        },
        "/DELETE/dbo/DatabaseLog(DatabaseLogID)": {
            "delete": {
                "description": "Deletes `[dbo].[DatabaseLog]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000018a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "DatabaseLogID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [dbo].[DatabaseLog]"
            }
        },
        "/DELETE/dbo/ErrorLog(ErrorLogID)": {
            "delete": {
                "description": "Deletes `[dbo].[ErrorLog]` according to the specified keys.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000018e",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ErrorLogID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "DELETE [dbo].[ErrorLog]"
            }
        },
        "/EXEC/HumanResources/uspUpdateEmployeeHireInfo": {
            "post": {
                "description": "Executes the stored procedure `[HumanResources].[uspUpdateEmployeeHireInfo]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000019a",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.uspUpdateEmployeeHireInfo.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HumanResources.uspUpdateEmployeeHireInfo.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [HumanResources].[uspUpdateEmployeeHireInfo]"
            }
        },
        "/EXEC/HumanResources/uspUpdateEmployeeLogin": {
            "post": {
                "description": "Executes the stored procedure `[HumanResources].[uspUpdateEmployeeLogin]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000019b",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.uspUpdateEmployeeLogin.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HumanResources.uspUpdateEmployeeLogin.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [HumanResources].[uspUpdateEmployeeLogin]"
            }
        },
        "/EXEC/HumanResources/uspUpdateEmployeePersonalInfo": {
            "post": {
                "description": "Executes the stored procedure `[HumanResources].[uspUpdateEmployeePersonalInfo]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000019c",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.uspUpdateEmployeePersonalInfo.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HumanResources.uspUpdateEmployeePersonalInfo.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [HumanResources].[uspUpdateEmployeePersonalInfo]"
            }
        },
        "/EXEC/dbo/uspGetBillOfMaterials": {
            "post": {
                "description": "Executes the stored procedure `[dbo].[uspGetBillOfMaterials]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000019f",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [dbo].[uspGetBillOfMaterials]"
            }
        },
        "/EXEC/dbo/uspGetBillOfMaterials1": {
            "post": {
                "description": "Executes the stored procedure `[dbo].[uspGetBillOfMaterials1]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000019d",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials1.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials1.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [dbo].[uspGetBillOfMaterials1]"
            }
        },
        "/EXEC/dbo/uspGetBillOfMaterials2": {
            "post": {
                "description": "Executes the stored procedure `[dbo].[uspGetBillOfMaterials2]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000019e",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials2.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.uspGetBillOfMaterials2.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [dbo].[uspGetBillOfMaterials2]"
            }
        },
        "/EXEC/dbo/uspGetEmployeeManagers": {
            "post": {
                "description": "Executes the stored procedure `[dbo].[uspGetEmployeeManagers]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000001a0",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.uspGetEmployeeManagers.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.uspGetEmployeeManagers.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [dbo].[uspGetEmployeeManagers]"
            }
        },
        "/EXEC/dbo/uspGetManagerEmployees": {
            "post": {
                "description": "Executes the stored procedure `[dbo].[uspGetManagerEmployees]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000001a1",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.uspGetManagerEmployees.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.uspGetManagerEmployees.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [dbo].[uspGetManagerEmployees]"
            }
        },
        "/EXEC/dbo/uspGetWhereUsedProductID": {
            "post": {
                "description": "Executes the stored procedure `[dbo].[uspGetWhereUsedProductID]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000001a2",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.uspGetWhereUsedProductID.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.uspGetWhereUsedProductID.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [dbo].[uspGetWhereUsedProductID]"
            }
        },
        "/EXEC/dbo/uspLogError": {
            "post": {
                "description": "Executes the stored procedure `[dbo].[uspLogError]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000001a3",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.uspLogError.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.uspLogError.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [dbo].[uspLogError]"
            }
        },
        "/EXEC/dbo/uspPrintError": {
            "post": {
                "description": "Executes the stored procedure `[dbo].[uspPrintError]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000001a4",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [dbo].[uspPrintError]"
            }
        },
        "/EXEC/dbo/uspSearchCandidateResumes": {
            "post": {
                "description": "Executes the stored procedure `[dbo].[uspSearchCandidateResumes]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000001a5",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.uspSearchCandidateResumes.Request"
                            }
                        }
                    },
                    "description": "The procedure parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.uspSearchCandidateResumes.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "EXEC [dbo].[uspSearchCandidateResumes]"
            }
        },
        "/INSERT/HumanResources/Department": {
            "post": {
                "description": "Inserts a new row into `[HumanResources].[Department]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000002",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Department(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [HumanResources].[Department]"
            }
        },
        "/INSERT/HumanResources/Employee": {
            "post": {
                "description": "Inserts a new row into `[HumanResources].[Employee]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000010",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Employee(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [HumanResources].[Employee]"
            }
        },
        "/INSERT/HumanResources/EmployeeDepartmentHistory": {
            "post": {
                "description": "Inserts a new row into `[HumanResources].[EmployeeDepartmentHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000008",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.EmployeeDepartmentHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [HumanResources].[EmployeeDepartmentHistory]"
            }
        },
        "/INSERT/HumanResources/EmployeePayHistory": {
            "post": {
                "description": "Inserts a new row into `[HumanResources].[EmployeePayHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000000c",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.EmployeePayHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [HumanResources].[EmployeePayHistory]"
            }
        },
        "/INSERT/HumanResources/JobCandidate": {
            "post": {
                "description": "Inserts a new row into `[HumanResources].[JobCandidate]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000001a",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.JobCandidate(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [HumanResources].[JobCandidate]"
            }
        },
        "/INSERT/HumanResources/Shift": {
            "post": {
                "description": "Inserts a new row into `[HumanResources].[Shift]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000001e",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Shift(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [HumanResources].[Shift]"
            }
        },
        "/INSERT/Person/Address": {
            "post": {
                "description": "Inserts a new row into `[Person].[Address]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000002e",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Address(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[Address]"
            }
        },
        "/INSERT/Person/AddressType": {
            "post": {
                "description": "Inserts a new row into `[Person].[AddressType]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000026",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.AddressType(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[AddressType]"
            }
        },
        "/INSERT/Person/BusinessEntity": {
            "post": {
                "description": "Inserts a new row into `[Person].[BusinessEntity]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000042",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntity(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[BusinessEntity]"
            }
        },
        "/INSERT/Person/BusinessEntityAddress": {
            "post": {
                "description": "Inserts a new row into `[Person].[BusinessEntityAddress]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000036",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntityAddress(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[BusinessEntityAddress]"
            }
        },
        "/INSERT/Person/BusinessEntityContact": {
            "post": {
                "description": "Inserts a new row into `[Person].[BusinessEntityContact]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000003c",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntityContact(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[BusinessEntityContact]"
            }
        },
        "/INSERT/Person/ContactType": {
            "post": {
                "description": "Inserts a new row into `[Person].[ContactType]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000048",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.ContactType(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[ContactType]"
            }
        },
        "/INSERT/Person/CountryRegion": {
            "post": {
                "description": "Inserts a new row into `[Person].[CountryRegion]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000004e",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.CountryRegion(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[CountryRegion]"
            }
        },
        "/INSERT/Person/EmailAddress": {
            "post": {
                "description": "Inserts a new row into `[Person].[EmailAddress]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000054",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.EmailAddress(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[EmailAddress]"
            }
        },
        "/INSERT/Person/Password": {
            "post": {
                "description": "Inserts a new row into `[Person].[Password]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000058",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Password(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[Password]"
            }
        },
        "/INSERT/Person/Person": {
            "post": {
                "description": "Inserts a new row into `[Person].[Person]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000060",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Person(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[Person]"
            }
        },
        "/INSERT/Person/PersonPhone": {
            "post": {
                "description": "Inserts a new row into `[Person].[PersonPhone]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000005c",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.PersonPhone(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[PersonPhone]"
            }
        },
        "/INSERT/Person/PhoneNumberType": {
            "post": {
                "description": "Inserts a new row into `[Person].[PhoneNumberType]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000066",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.PhoneNumberType(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[PhoneNumberType]"
            }
        },
        "/INSERT/Person/StateProvince": {
            "post": {
                "description": "Inserts a new row into `[Person].[StateProvince]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000006a",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.StateProvince(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Person].[StateProvince]"
            }
        },
        "/INSERT/Production/BillOfMaterials": {
            "post": {
                "description": "Inserts a new row into `[Production].[BillOfMaterials]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000074",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.BillOfMaterials(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[BillOfMaterials]"
            }
        },
        "/INSERT/Production/Culture": {
            "post": {
                "description": "Inserts a new row into `[Production].[Culture]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000007a",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Culture(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[Culture]"
            }
        },
        "/INSERT/Production/Document": {
            "post": {
                "description": "Inserts a new row into `[Production].[Document]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000080",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Document(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[Document]"
            }
        },
        "/INSERT/Production/Illustration": {
            "post": {
                "description": "Inserts a new row into `[Production].[Illustration]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000088",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Illustration(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[Illustration]"
            }
        },
        "/INSERT/Production/Location": {
            "post": {
                "description": "Inserts a new row into `[Production].[Location]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000008c",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Location(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[Location]"
            }
        },
        "/INSERT/Production/Product": {
            "post": {
                "description": "Inserts a new row into `[Production].[Product]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000d4",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Product(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[Product]"
            }
        },
        "/INSERT/Production/ProductCategory": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductCategory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000092",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductCategory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductCategory]"
            }
        },
        "/INSERT/Production/ProductCostHistory": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductCostHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000009a",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductCostHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductCostHistory]"
            }
        },
        "/INSERT/Production/ProductDescription": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductDescription]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000009e",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductDescription(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductDescription]"
            }
        },
        "/INSERT/Production/ProductDocument": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductDocument]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000a4",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductDocument(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductDocument]"
            }
        },
        "/INSERT/Production/ProductInventory": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductInventory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000a8",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductInventory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductInventory]"
            }
        },
        "/INSERT/Production/ProductListPriceHistory": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductListPriceHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ac",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductListPriceHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductListPriceHistory]"
            }
        },
        "/INSERT/Production/ProductModel": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductModel]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000b8",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModel(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductModel]"
            }
        },
        "/INSERT/Production/ProductModelIllustration": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductModelIllustration]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000b0",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModelIllustration(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductModelIllustration]"
            }
        },
        "/INSERT/Production/ProductModelProductDescriptionCulture": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductModelProductDescriptionCulture]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000b4",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModelProductDescriptionCulture(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductModelProductDescriptionCulture]"
            }
        },
        "/INSERT/Production/ProductPhoto": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductPhoto]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000c0",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductPhoto(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductPhoto]"
            }
        },
        "/INSERT/Production/ProductProductPhoto": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductProductPhoto]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000c4",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductProductPhoto(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductProductPhoto]"
            }
        },
        "/INSERT/Production/ProductReview": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductReview]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000c8",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductReview(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductReview]"
            }
        },
        "/INSERT/Production/ProductSubcategory": {
            "post": {
                "description": "Inserts a new row into `[Production].[ProductSubcategory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000cc",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductSubcategory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ProductSubcategory]"
            }
        },
        "/INSERT/Production/ScrapReason": {
            "post": {
                "description": "Inserts a new row into `[Production].[ScrapReason]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000de",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ScrapReason(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[ScrapReason]"
            }
        },
        "/INSERT/Production/TransactionHistory": {
            "post": {
                "description": "Inserts a new row into `[Production].[TransactionHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000e8",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.TransactionHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[TransactionHistory]"
            }
        },
        "/INSERT/Production/TransactionHistoryArchive": {
            "post": {
                "description": "Inserts a new row into `[Production].[TransactionHistoryArchive]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000e4",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.TransactionHistoryArchive(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[TransactionHistoryArchive]"
            }
        },
        "/INSERT/Production/UnitMeasure": {
            "post": {
                "description": "Inserts a new row into `[Production].[UnitMeasure]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ec",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.UnitMeasure(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[UnitMeasure]"
            }
        },
        "/INSERT/Production/WorkOrder": {
            "post": {
                "description": "Inserts a new row into `[Production].[WorkOrder]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000f6",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.WorkOrder(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[WorkOrder]"
            }
        },
        "/INSERT/Production/WorkOrderRouting": {
            "post": {
                "description": "Inserts a new row into `[Production].[WorkOrderRouting]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000f2",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.WorkOrderRouting(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Production].[WorkOrderRouting]"
            }
        },
        "/INSERT/Purchasing/ProductVendor": {
            "post": {
                "description": "Inserts a new row into `[Purchasing].[ProductVendor]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000fa",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.ProductVendor(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Purchasing].[ProductVendor]"
            }
        },
        "/INSERT/Purchasing/PurchaseOrderDetail": {
            "post": {
                "description": "Inserts a new row into `[Purchasing].[PurchaseOrderDetail]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000fe",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.PurchaseOrderDetail(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Purchasing].[PurchaseOrderDetail]"
            }
        },
        "/INSERT/Purchasing/PurchaseOrderHeader": {
            "post": {
                "description": "Inserts a new row into `[Purchasing].[PurchaseOrderHeader]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000102",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.PurchaseOrderHeader(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Purchasing].[PurchaseOrderHeader]"
            }
        },
        "/INSERT/Purchasing/ShipMethod": {
            "post": {
                "description": "Inserts a new row into `[Purchasing].[ShipMethod]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000106",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.ShipMethod(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Purchasing].[ShipMethod]"
            }
        },
        "/INSERT/Purchasing/Vendor": {
            "post": {
                "description": "Inserts a new row into `[Purchasing].[Vendor]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000010e",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.Vendor(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Purchasing].[Vendor]"
            }
        },
        "/INSERT/Sales/CountryRegionCurrency": {
            "post": {
                "description": "Inserts a new row into `[Sales].[CountryRegionCurrency]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000114",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CountryRegionCurrency(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[CountryRegionCurrency]"
            }
        },
        "/INSERT/Sales/CreditCard": {
            "post": {
                "description": "Inserts a new row into `[Sales].[CreditCard]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000118",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CreditCard(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[CreditCard]"
            }
        },
        "/INSERT/Sales/Currency": {
            "post": {
                "description": "Inserts a new row into `[Sales].[Currency]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000124",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Currency(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[Currency]"
            }
        },
        "/INSERT/Sales/CurrencyRate": {
            "post": {
                "description": "Inserts a new row into `[Sales].[CurrencyRate]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000011e",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CurrencyRate(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[CurrencyRate]"
            }
        },
        "/INSERT/Sales/Customer": {
            "post": {
                "description": "Inserts a new row into `[Sales].[Customer]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000012a",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Customer(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[Customer]"
            }
        },
        "/INSERT/Sales/PersonCreditCard": {
            "post": {
                "description": "Inserts a new row into `[Sales].[PersonCreditCard]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000132",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.PersonCreditCard(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[PersonCreditCard]"
            }
        },
        "/INSERT/Sales/SalesOrderDetail": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SalesOrderDetail]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000136",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderDetail(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SalesOrderDetail]"
            }
        },
        "/INSERT/Sales/SalesOrderHeader": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SalesOrderHeader]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000140",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderHeader(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SalesOrderHeader]"
            }
        },
        "/INSERT/Sales/SalesOrderHeaderSalesReason": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SalesOrderHeaderSalesReason]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000013c",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderHeaderSalesReason(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SalesOrderHeaderSalesReason]"
            }
        },
        "/INSERT/Sales/SalesPerson": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SalesPerson]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000014e",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesPerson(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SalesPerson]"
            }
        },
        "/INSERT/Sales/SalesPersonQuotaHistory": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SalesPersonQuotaHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000148",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesPersonQuotaHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SalesPersonQuotaHistory]"
            }
        },
        "/INSERT/Sales/SalesReason": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SalesReason]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000154",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesReason(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SalesReason]"
            }
        },
        "/INSERT/Sales/SalesTaxRate": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SalesTaxRate]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000158",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTaxRate(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SalesTaxRate]"
            }
        },
        "/INSERT/Sales/SalesTerritory": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SalesTerritory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000166",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTerritory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SalesTerritory]"
            }
        },
        "/INSERT/Sales/SalesTerritoryHistory": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SalesTerritoryHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000160",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTerritoryHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SalesTerritoryHistory]"
            }
        },
        "/INSERT/Sales/ShoppingCartItem": {
            "post": {
                "description": "Inserts a new row into `[Sales].[ShoppingCartItem]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000016e",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.ShoppingCartItem(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[ShoppingCartItem]"
            }
        },
        "/INSERT/Sales/SpecialOffer": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SpecialOffer]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000178",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SpecialOffer(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SpecialOffer]"
            }
        },
        "/INSERT/Sales/SpecialOfferProduct": {
            "post": {
                "description": "Inserts a new row into `[Sales].[SpecialOfferProduct]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000172",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SpecialOfferProduct(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[SpecialOfferProduct]"
            }
        },
        "/INSERT/Sales/Store": {
            "post": {
                "description": "Inserts a new row into `[Sales].[Store]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000017e",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Store(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [Sales].[Store]"
            }
        },
        "/INSERT/dbo/AWBuildVersion": {
            "post": {
                "description": "Inserts a new row into `[dbo].[AWBuildVersion]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000184",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.AWBuildVersion(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [dbo].[AWBuildVersion]"
            }
        },
        "/INSERT/dbo/DatabaseLog": {
            "post": {
                "description": "Inserts a new row into `[dbo].[DatabaseLog]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000188",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.DatabaseLog(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [dbo].[DatabaseLog]"
            }
        },
        "/INSERT/dbo/ErrorLog": {
            "post": {
                "description": "Inserts a new row into `[dbo].[ErrorLog]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000018c",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ErrorLog(Updateable)"
                            }
                        }
                    },
                    "description": "The values to insert.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The resulting schema."
                    }
                },
                "summary": "INSERT INTO [dbo].[ErrorLog]"
            }
        },
        "/SELECT/HumanResources/Department": {
            "post": {
                "description": "Selects all columns from `[HumanResources].[Department]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000001",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Department(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HumanResources.Department.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [HumanResources].[Department]"
            }
        },
        "/SELECT/HumanResources/Employee": {
            "post": {
                "description": "Selects all columns from `[HumanResources].[Employee]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000000f",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Employee(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HumanResources.Employee.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [HumanResources].[Employee]"
            }
        },
        "/SELECT/HumanResources/EmployeeDepartmentHistory": {
            "post": {
                "description": "Selects all columns from `[HumanResources].[EmployeeDepartmentHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000007",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.EmployeeDepartmentHistory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HumanResources.EmployeeDepartmentHistory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [HumanResources].[EmployeeDepartmentHistory]"
            }
        },
        "/SELECT/HumanResources/EmployeePayHistory": {
            "post": {
                "description": "Selects all columns from `[HumanResources].[EmployeePayHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000000b",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.EmployeePayHistory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HumanResources.EmployeePayHistory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [HumanResources].[EmployeePayHistory]"
            }
        },
        "/SELECT/HumanResources/JobCandidate": {
            "post": {
                "description": "Selects all columns from `[HumanResources].[JobCandidate]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000019",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.JobCandidate(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HumanResources.JobCandidate.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [HumanResources].[JobCandidate]"
            }
        },
        "/SELECT/HumanResources/Shift": {
            "post": {
                "description": "Selects all columns from `[HumanResources].[Shift]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000001d",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Shift(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HumanResources.Shift.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [HumanResources].[Shift]"
            }
        },
        "/SELECT/Person/Address": {
            "post": {
                "description": "Selects all columns from `[Person].[Address]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000002d",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Address(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.Address.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[Address]"
            }
        },
        "/SELECT/Person/AddressType": {
            "post": {
                "description": "Selects all columns from `[Person].[AddressType]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000025",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.AddressType(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.AddressType.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[AddressType]"
            }
        },
        "/SELECT/Person/BusinessEntity": {
            "post": {
                "description": "Selects all columns from `[Person].[BusinessEntity]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000041",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntity(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.BusinessEntity.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[BusinessEntity]"
            }
        },
        "/SELECT/Person/BusinessEntityAddress": {
            "post": {
                "description": "Selects all columns from `[Person].[BusinessEntityAddress]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000035",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntityAddress(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.BusinessEntityAddress.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[BusinessEntityAddress]"
            }
        },
        "/SELECT/Person/BusinessEntityContact": {
            "post": {
                "description": "Selects all columns from `[Person].[BusinessEntityContact]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000003b",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntityContact(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.BusinessEntityContact.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[BusinessEntityContact]"
            }
        },
        "/SELECT/Person/ContactType": {
            "post": {
                "description": "Selects all columns from `[Person].[ContactType]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000047",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.ContactType(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.ContactType.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[ContactType]"
            }
        },
        "/SELECT/Person/CountryRegion": {
            "post": {
                "description": "Selects all columns from `[Person].[CountryRegion]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000004d",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.CountryRegion(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.CountryRegion.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[CountryRegion]"
            }
        },
        "/SELECT/Person/EmailAddress": {
            "post": {
                "description": "Selects all columns from `[Person].[EmailAddress]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000053",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.EmailAddress(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.EmailAddress.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[EmailAddress]"
            }
        },
        "/SELECT/Person/Password": {
            "post": {
                "description": "Selects all columns from `[Person].[Password]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000057",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Password(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.Password.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[Password]"
            }
        },
        "/SELECT/Person/Person": {
            "post": {
                "description": "Selects all columns from `[Person].[Person]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000005f",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Person(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.Person.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[Person]"
            }
        },
        "/SELECT/Person/PersonPhone": {
            "post": {
                "description": "Selects all columns from `[Person].[PersonPhone]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000005b",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.PersonPhone(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.PersonPhone.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[PersonPhone]"
            }
        },
        "/SELECT/Person/PhoneNumberType": {
            "post": {
                "description": "Selects all columns from `[Person].[PhoneNumberType]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000065",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.PhoneNumberType(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.PhoneNumberType.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[PhoneNumberType]"
            }
        },
        "/SELECT/Person/StateProvince": {
            "post": {
                "description": "Selects all columns from `[Person].[StateProvince]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000069",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.StateProvince(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Person.StateProvince.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Person].[StateProvince]"
            }
        },
        "/SELECT/Production/BillOfMaterials": {
            "post": {
                "description": "Selects all columns from `[Production].[BillOfMaterials]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000073",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.BillOfMaterials(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.BillOfMaterials.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[BillOfMaterials]"
            }
        },
        "/SELECT/Production/Culture": {
            "post": {
                "description": "Selects all columns from `[Production].[Culture]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000079",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Culture(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.Culture.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[Culture]"
            }
        },
        "/SELECT/Production/Document": {
            "post": {
                "description": "Selects all columns from `[Production].[Document]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000007f",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Document(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.Document.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[Document]"
            }
        },
        "/SELECT/Production/Illustration": {
            "post": {
                "description": "Selects all columns from `[Production].[Illustration]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000087",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Illustration(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.Illustration.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[Illustration]"
            }
        },
        "/SELECT/Production/Location": {
            "post": {
                "description": "Selects all columns from `[Production].[Location]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000008b",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Location(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.Location.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[Location]"
            }
        },
        "/SELECT/Production/Product": {
            "post": {
                "description": "Selects all columns from `[Production].[Product]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000d3",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Product(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.Product.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[Product]"
            }
        },
        "/SELECT/Production/ProductCategory": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductCategory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000091",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductCategory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductCategory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductCategory]"
            }
        },
        "/SELECT/Production/ProductCostHistory": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductCostHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000099",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductCostHistory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductCostHistory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductCostHistory]"
            }
        },
        "/SELECT/Production/ProductDescription": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductDescription]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000009d",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductDescription(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductDescription.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductDescription]"
            }
        },
        "/SELECT/Production/ProductDocument": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductDocument]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000a3",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductDocument(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductDocument.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductDocument]"
            }
        },
        "/SELECT/Production/ProductInventory": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductInventory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000a7",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductInventory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductInventory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductInventory]"
            }
        },
        "/SELECT/Production/ProductListPriceHistory": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductListPriceHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ab",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductListPriceHistory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductListPriceHistory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductListPriceHistory]"
            }
        },
        "/SELECT/Production/ProductModel": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductModel]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000b7",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModel(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductModel.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductModel]"
            }
        },
        "/SELECT/Production/ProductModelIllustration": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductModelIllustration]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000af",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModelIllustration(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductModelIllustration.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductModelIllustration]"
            }
        },
        "/SELECT/Production/ProductModelProductDescriptionCulture": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductModelProductDescriptionCulture]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000b3",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModelProductDescriptionCulture(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductModelProductDescriptionCulture.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductModelProductDescriptionCulture]"
            }
        },
        "/SELECT/Production/ProductPhoto": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductPhoto]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000bf",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductPhoto(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductPhoto.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductPhoto]"
            }
        },
        "/SELECT/Production/ProductProductPhoto": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductProductPhoto]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000c3",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductProductPhoto(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductProductPhoto.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductProductPhoto]"
            }
        },
        "/SELECT/Production/ProductReview": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductReview]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000c7",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductReview(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductReview.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductReview]"
            }
        },
        "/SELECT/Production/ProductSubcategory": {
            "post": {
                "description": "Selects all columns from `[Production].[ProductSubcategory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000cb",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductSubcategory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ProductSubcategory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ProductSubcategory]"
            }
        },
        "/SELECT/Production/ScrapReason": {
            "post": {
                "description": "Selects all columns from `[Production].[ScrapReason]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000dd",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ScrapReason(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.ScrapReason.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[ScrapReason]"
            }
        },
        "/SELECT/Production/TransactionHistory": {
            "post": {
                "description": "Selects all columns from `[Production].[TransactionHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000e7",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.TransactionHistory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.TransactionHistory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[TransactionHistory]"
            }
        },
        "/SELECT/Production/TransactionHistoryArchive": {
            "post": {
                "description": "Selects all columns from `[Production].[TransactionHistoryArchive]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000e3",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.TransactionHistoryArchive(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.TransactionHistoryArchive.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[TransactionHistoryArchive]"
            }
        },
        "/SELECT/Production/UnitMeasure": {
            "post": {
                "description": "Selects all columns from `[Production].[UnitMeasure]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000eb",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.UnitMeasure(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.UnitMeasure.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[UnitMeasure]"
            }
        },
        "/SELECT/Production/WorkOrder": {
            "post": {
                "description": "Selects all columns from `[Production].[WorkOrder]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000f5",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.WorkOrder(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.WorkOrder.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[WorkOrder]"
            }
        },
        "/SELECT/Production/WorkOrderRouting": {
            "post": {
                "description": "Selects all columns from `[Production].[WorkOrderRouting]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000f1",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.WorkOrderRouting(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Production.WorkOrderRouting.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Production].[WorkOrderRouting]"
            }
        },
        "/SELECT/Purchasing/ProductVendor": {
            "post": {
                "description": "Selects all columns from `[Purchasing].[ProductVendor]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000f9",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.ProductVendor(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Purchasing.ProductVendor.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Purchasing].[ProductVendor]"
            }
        },
        "/SELECT/Purchasing/PurchaseOrderDetail": {
            "post": {
                "description": "Selects all columns from `[Purchasing].[PurchaseOrderDetail]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000fd",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.PurchaseOrderDetail(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Purchasing.PurchaseOrderDetail.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Purchasing].[PurchaseOrderDetail]"
            }
        },
        "/SELECT/Purchasing/PurchaseOrderHeader": {
            "post": {
                "description": "Selects all columns from `[Purchasing].[PurchaseOrderHeader]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000101",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.PurchaseOrderHeader(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Purchasing.PurchaseOrderHeader.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Purchasing].[PurchaseOrderHeader]"
            }
        },
        "/SELECT/Purchasing/ShipMethod": {
            "post": {
                "description": "Selects all columns from `[Purchasing].[ShipMethod]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000105",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.ShipMethod(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Purchasing.ShipMethod.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Purchasing].[ShipMethod]"
            }
        },
        "/SELECT/Purchasing/Vendor": {
            "post": {
                "description": "Selects all columns from `[Purchasing].[Vendor]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000010d",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.Vendor(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Purchasing.Vendor.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Purchasing].[Vendor]"
            }
        },
        "/SELECT/Sales/CountryRegionCurrency": {
            "post": {
                "description": "Selects all columns from `[Sales].[CountryRegionCurrency]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000113",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CountryRegionCurrency(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.CountryRegionCurrency.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[CountryRegionCurrency]"
            }
        },
        "/SELECT/Sales/CreditCard": {
            "post": {
                "description": "Selects all columns from `[Sales].[CreditCard]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000117",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CreditCard(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.CreditCard.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[CreditCard]"
            }
        },
        "/SELECT/Sales/Currency": {
            "post": {
                "description": "Selects all columns from `[Sales].[Currency]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000123",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Currency(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.Currency.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[Currency]"
            }
        },
        "/SELECT/Sales/CurrencyRate": {
            "post": {
                "description": "Selects all columns from `[Sales].[CurrencyRate]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000011d",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CurrencyRate(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.CurrencyRate.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[CurrencyRate]"
            }
        },
        "/SELECT/Sales/Customer": {
            "post": {
                "description": "Selects all columns from `[Sales].[Customer]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000129",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Customer(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.Customer.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[Customer]"
            }
        },
        "/SELECT/Sales/PersonCreditCard": {
            "post": {
                "description": "Selects all columns from `[Sales].[PersonCreditCard]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000131",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.PersonCreditCard(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.PersonCreditCard.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[PersonCreditCard]"
            }
        },
        "/SELECT/Sales/SalesOrderDetail": {
            "post": {
                "description": "Selects all columns from `[Sales].[SalesOrderDetail]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000135",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderDetail(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SalesOrderDetail.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SalesOrderDetail]"
            }
        },
        "/SELECT/Sales/SalesOrderHeader": {
            "post": {
                "description": "Selects all columns from `[Sales].[SalesOrderHeader]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000013f",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderHeader(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SalesOrderHeader.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SalesOrderHeader]"
            }
        },
        "/SELECT/Sales/SalesOrderHeaderSalesReason": {
            "post": {
                "description": "Selects all columns from `[Sales].[SalesOrderHeaderSalesReason]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000013b",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderHeaderSalesReason(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SalesOrderHeaderSalesReason.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SalesOrderHeaderSalesReason]"
            }
        },
        "/SELECT/Sales/SalesPerson": {
            "post": {
                "description": "Selects all columns from `[Sales].[SalesPerson]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000014d",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesPerson(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SalesPerson.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SalesPerson]"
            }
        },
        "/SELECT/Sales/SalesPersonQuotaHistory": {
            "post": {
                "description": "Selects all columns from `[Sales].[SalesPersonQuotaHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000147",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesPersonQuotaHistory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SalesPersonQuotaHistory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SalesPersonQuotaHistory]"
            }
        },
        "/SELECT/Sales/SalesReason": {
            "post": {
                "description": "Selects all columns from `[Sales].[SalesReason]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000153",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesReason(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SalesReason.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SalesReason]"
            }
        },
        "/SELECT/Sales/SalesTaxRate": {
            "post": {
                "description": "Selects all columns from `[Sales].[SalesTaxRate]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000157",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTaxRate(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SalesTaxRate.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SalesTaxRate]"
            }
        },
        "/SELECT/Sales/SalesTerritory": {
            "post": {
                "description": "Selects all columns from `[Sales].[SalesTerritory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000165",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTerritory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SalesTerritory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SalesTerritory]"
            }
        },
        "/SELECT/Sales/SalesTerritoryHistory": {
            "post": {
                "description": "Selects all columns from `[Sales].[SalesTerritoryHistory]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000015f",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTerritoryHistory(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SalesTerritoryHistory.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SalesTerritoryHistory]"
            }
        },
        "/SELECT/Sales/ShoppingCartItem": {
            "post": {
                "description": "Selects all columns from `[Sales].[ShoppingCartItem]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000016d",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.ShoppingCartItem(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.ShoppingCartItem.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[ShoppingCartItem]"
            }
        },
        "/SELECT/Sales/SpecialOffer": {
            "post": {
                "description": "Selects all columns from `[Sales].[SpecialOffer]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000177",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SpecialOffer(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SpecialOffer.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SpecialOffer]"
            }
        },
        "/SELECT/Sales/SpecialOfferProduct": {
            "post": {
                "description": "Selects all columns from `[Sales].[SpecialOfferProduct]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000171",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SpecialOfferProduct(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.SpecialOfferProduct.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[SpecialOfferProduct]"
            }
        },
        "/SELECT/Sales/Store": {
            "post": {
                "description": "Selects all columns from `[Sales].[Store]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000017d",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Store(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sales.Store.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [Sales].[Store]"
            }
        },
        "/SELECT/dbo/AWBuildVersion": {
            "post": {
                "description": "Selects all columns from `[dbo].[AWBuildVersion]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000183",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.AWBuildVersion(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.AWBuildVersion.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [dbo].[AWBuildVersion]"
            }
        },
        "/SELECT/dbo/DatabaseLog": {
            "post": {
                "description": "Selects all columns from `[dbo].[DatabaseLog]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000187",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.DatabaseLog(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.DatabaseLog.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [dbo].[DatabaseLog]"
            }
        },
        "/SELECT/dbo/ErrorLog": {
            "post": {
                "description": "Selects all columns from `[dbo].[ErrorLog]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000018b",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ErrorLog(Optional)"
                            }
                        }
                    },
                    "description": "The properties to filter by.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ErrorLog.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [dbo].[ErrorLog]"
            }
        },
        "/SELECT/dbo/ufnGetAccountingEndDate": {
            "post": {
                "description": "Selects from the scalar function `[dbo].[ufnGetAccountingEndDate]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000018f",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnGetAccountingEndDate.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnGetAccountingEndDate.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT [dbo].[ufnGetAccountingEndDate]"
            }
        },
        "/SELECT/dbo/ufnGetAccountingStartDate": {
            "post": {
                "description": "Selects from the scalar function `[dbo].[ufnGetAccountingStartDate]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000190",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnGetAccountingStartDate.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnGetAccountingStartDate.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT [dbo].[ufnGetAccountingStartDate]"
            }
        },
        "/SELECT/dbo/ufnGetContactInformation": {
            "post": {
                "description": "Selects from the rowset function `[dbo].[ufnGetContactInformation]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000191",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnGetContactInformation.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnGetContactInformation.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT FROM [dbo].[ufnGetContactInformation]"
            }
        },
        "/SELECT/dbo/ufnGetDocumentStatusText": {
            "post": {
                "description": "Selects from the scalar function `[dbo].[ufnGetDocumentStatusText]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000192",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnGetDocumentStatusText.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnGetDocumentStatusText.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT [dbo].[ufnGetDocumentStatusText]"
            }
        },
        "/SELECT/dbo/ufnGetProductDealerPrice": {
            "post": {
                "description": "Selects from the scalar function `[dbo].[ufnGetProductDealerPrice]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000193",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnGetProductDealerPrice.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnGetProductDealerPrice.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT [dbo].[ufnGetProductDealerPrice]"
            }
        },
        "/SELECT/dbo/ufnGetProductListPrice": {
            "post": {
                "description": "Selects from the scalar function `[dbo].[ufnGetProductListPrice]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000194",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnGetProductListPrice.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnGetProductListPrice.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT [dbo].[ufnGetProductListPrice]"
            }
        },
        "/SELECT/dbo/ufnGetProductStandardCost": {
            "post": {
                "description": "Selects from the scalar function `[dbo].[ufnGetProductStandardCost]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000195",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnGetProductStandardCost.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnGetProductStandardCost.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT [dbo].[ufnGetProductStandardCost]"
            }
        },
        "/SELECT/dbo/ufnGetPurchaseOrderStatusText": {
            "post": {
                "description": "Selects from the scalar function `[dbo].[ufnGetPurchaseOrderStatusText]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000196",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnGetPurchaseOrderStatusText.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnGetPurchaseOrderStatusText.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT [dbo].[ufnGetPurchaseOrderStatusText]"
            }
        },
        "/SELECT/dbo/ufnGetSalesOrderStatusText": {
            "post": {
                "description": "Selects from the scalar function `[dbo].[ufnGetSalesOrderStatusText]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000197",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnGetSalesOrderStatusText.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnGetSalesOrderStatusText.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT [dbo].[ufnGetSalesOrderStatusText]"
            }
        },
        "/SELECT/dbo/ufnGetStock": {
            "post": {
                "description": "Selects from the scalar function `[dbo].[ufnGetStock]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000198",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnGetStock.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnGetStock.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT [dbo].[ufnGetStock]"
            }
        },
        "/SELECT/dbo/ufnLeadingZeros": {
            "post": {
                "description": "Selects from the scalar function `[dbo].[ufnLeadingZeros]`",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000199",
                        "x-k2-gateway-gatewayOnly": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ufnLeadingZeros.Request"
                            }
                        }
                    },
                    "description": "The function parameters.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/dbo.ufnLeadingZeros.Response"
                                }
                            }
                        },
                        "description": "The resulting schema."
                    }
                },
                "summary": "SELECT [dbo].[ufnLeadingZeros]"
            }
        },
        "/UPDATE/HumanResources/Department(DepartmentID)": {
            "patch": {
                "description": "Updates `[HumanResources].[Department]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000003",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "DepartmentID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Department(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[Department]"
            }
        },
        "/UPDATE/HumanResources/Department(Name)": {
            "patch": {
                "description": "Updates `[HumanResources].[Department]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000004",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Department(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[Department]"
            }
        },
        "/UPDATE/HumanResources/Employee(BusinessEntityID)": {
            "patch": {
                "description": "Updates `[HumanResources].[Employee]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000011",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Employee(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[Employee]"
            }
        },
        "/UPDATE/HumanResources/Employee(LoginID)": {
            "patch": {
                "description": "Updates `[HumanResources].[Employee]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000012",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "LoginID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,256)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Employee(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[Employee]"
            }
        },
        "/UPDATE/HumanResources/Employee(NationalIDNumber)": {
            "patch": {
                "description": "Updates `[HumanResources].[Employee]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000013",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "NationalIDNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,15)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Employee(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[Employee]"
            }
        },
        "/UPDATE/HumanResources/Employee(rowguid)": {
            "patch": {
                "description": "Updates `[HumanResources].[Employee]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000014",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Employee(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[Employee]"
            }
        },
        "/UPDATE/HumanResources/EmployeeDepartmentHistory(BusinessEntityID,StartDate,DepartmentID,ShiftID)": {
            "patch": {
                "description": "Updates `[HumanResources].[EmployeeDepartmentHistory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000009",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StartDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Date(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "DepartmentID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ShiftID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TinyInt(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.EmployeeDepartmentHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[EmployeeDepartmentHistory]"
            }
        },
        "/UPDATE/HumanResources/EmployeePayHistory(BusinessEntityID,RateChangeDate)": {
            "patch": {
                "description": "Updates `[HumanResources].[EmployeePayHistory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000000d",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "RateChangeDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.EmployeePayHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[EmployeePayHistory]"
            }
        },
        "/UPDATE/HumanResources/JobCandidate(JobCandidateID)": {
            "patch": {
                "description": "Updates `[HumanResources].[JobCandidate]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000001b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "JobCandidateID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.JobCandidate(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[JobCandidate]"
            }
        },
        "/UPDATE/HumanResources/Shift(Name)": {
            "patch": {
                "description": "Updates `[HumanResources].[Shift]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000020",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Shift(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[Shift]"
            }
        },
        "/UPDATE/HumanResources/Shift(ShiftID)": {
            "patch": {
                "description": "Updates `[HumanResources].[Shift]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000001f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ShiftID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TinyInt(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Shift(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[Shift]"
            }
        },
        "/UPDATE/HumanResources/Shift(StartTime,EndTime)": {
            "patch": {
                "description": "Updates `[HumanResources].[Shift]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000021",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "StartTime",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Time(Optional,7)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "EndTime",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Time(Optional,7)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanResources.Shift(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [HumanResources].[Shift]"
            }
        },
        "/UPDATE/Person/Address(AddressID)": {
            "patch": {
                "description": "Updates `[Person].[Address]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000002f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "AddressID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Address(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[Address]"
            }
        },
        "/UPDATE/Person/Address(AddressLine1,AddressLine2,City,StateProvinceID,PostalCode)": {
            "patch": {
                "description": "Updates `[Person].[Address]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000031",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "AddressLine1",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,60)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "AddressLine2",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,60)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "City",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,30)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StateProvinceID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "PostalCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,15)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Address(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[Address]"
            }
        },
        "/UPDATE/Person/Address(rowguid)": {
            "patch": {
                "description": "Updates `[Person].[Address]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000030",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Address(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[Address]"
            }
        },
        "/UPDATE/Person/AddressType(AddressTypeID)": {
            "patch": {
                "description": "Updates `[Person].[AddressType]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000027",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "AddressTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.AddressType(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[AddressType]"
            }
        },
        "/UPDATE/Person/AddressType(Name)": {
            "patch": {
                "description": "Updates `[Person].[AddressType]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000029",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.AddressType(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[AddressType]"
            }
        },
        "/UPDATE/Person/AddressType(rowguid)": {
            "patch": {
                "description": "Updates `[Person].[AddressType]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000028",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.AddressType(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[AddressType]"
            }
        },
        "/UPDATE/Person/BusinessEntity(BusinessEntityID)": {
            "patch": {
                "description": "Updates `[Person].[BusinessEntity]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000043",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntity(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[BusinessEntity]"
            }
        },
        "/UPDATE/Person/BusinessEntity(rowguid)": {
            "patch": {
                "description": "Updates `[Person].[BusinessEntity]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000044",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntity(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[BusinessEntity]"
            }
        },
        "/UPDATE/Person/BusinessEntityAddress(BusinessEntityID,AddressID,AddressTypeID)": {
            "patch": {
                "description": "Updates `[Person].[BusinessEntityAddress]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000037",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "AddressID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "AddressTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntityAddress(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[BusinessEntityAddress]"
            }
        },
        "/UPDATE/Person/BusinessEntityAddress(rowguid)": {
            "patch": {
                "description": "Updates `[Person].[BusinessEntityAddress]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000038",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntityAddress(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[BusinessEntityAddress]"
            }
        },
        "/UPDATE/Person/BusinessEntityContact(BusinessEntityID,PersonID,ContactTypeID)": {
            "patch": {
                "description": "Updates `[Person].[BusinessEntityContact]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000003d",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "PersonID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ContactTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntityContact(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[BusinessEntityContact]"
            }
        },
        "/UPDATE/Person/BusinessEntityContact(rowguid)": {
            "patch": {
                "description": "Updates `[Person].[BusinessEntityContact]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000003e",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.BusinessEntityContact(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[BusinessEntityContact]"
            }
        },
        "/UPDATE/Person/ContactType(ContactTypeID)": {
            "patch": {
                "description": "Updates `[Person].[ContactType]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000049",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ContactTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.ContactType(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[ContactType]"
            }
        },
        "/UPDATE/Person/ContactType(Name)": {
            "patch": {
                "description": "Updates `[Person].[ContactType]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000004a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.ContactType(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[ContactType]"
            }
        },
        "/UPDATE/Person/CountryRegion(CountryRegionCode)": {
            "patch": {
                "description": "Updates `[Person].[CountryRegion]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000004f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CountryRegionCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,3)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.CountryRegion(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[CountryRegion]"
            }
        },
        "/UPDATE/Person/CountryRegion(Name)": {
            "patch": {
                "description": "Updates `[Person].[CountryRegion]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000050",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.CountryRegion(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[CountryRegion]"
            }
        },
        "/UPDATE/Person/EmailAddress(BusinessEntityID,EmailAddressID)": {
            "patch": {
                "description": "Updates `[Person].[EmailAddress]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000055",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "EmailAddressID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.EmailAddress(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[EmailAddress]"
            }
        },
        "/UPDATE/Person/Password(BusinessEntityID)": {
            "patch": {
                "description": "Updates `[Person].[Password]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000059",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Password(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[Password]"
            }
        },
        "/UPDATE/Person/Person(BusinessEntityID)": {
            "patch": {
                "description": "Updates `[Person].[Person]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000061",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Person(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[Person]"
            }
        },
        "/UPDATE/Person/Person(rowguid)": {
            "patch": {
                "description": "Updates `[Person].[Person]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000062",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.Person(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[Person]"
            }
        },
        "/UPDATE/Person/PersonPhone(BusinessEntityID,PhoneNumber,PhoneNumberTypeID)": {
            "patch": {
                "description": "Updates `[Person].[PersonPhone]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000005d",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "PhoneNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,25)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "PhoneNumberTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.PersonPhone(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[PersonPhone]"
            }
        },
        "/UPDATE/Person/PhoneNumberType(PhoneNumberTypeID)": {
            "patch": {
                "description": "Updates `[Person].[PhoneNumberType]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000067",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "PhoneNumberTypeID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.PhoneNumberType(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[PhoneNumberType]"
            }
        },
        "/UPDATE/Person/StateProvince(Name)": {
            "patch": {
                "description": "Updates `[Person].[StateProvince]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000006c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.StateProvince(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[StateProvince]"
            }
        },
        "/UPDATE/Person/StateProvince(StateProvinceCode,CountryRegionCode)": {
            "patch": {
                "description": "Updates `[Person].[StateProvince]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000006d",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "StateProvinceCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "CountryRegionCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,3)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.StateProvince(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[StateProvince]"
            }
        },
        "/UPDATE/Person/StateProvince(StateProvinceID)": {
            "patch": {
                "description": "Updates `[Person].[StateProvince]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000006b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "StateProvinceID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.StateProvince(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[StateProvince]"
            }
        },
        "/UPDATE/Person/StateProvince(rowguid)": {
            "patch": {
                "description": "Updates `[Person].[StateProvince]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000006e",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Person.StateProvince(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Person].[StateProvince]"
            }
        },
        "/UPDATE/Production/BillOfMaterials(BillOfMaterialsID)": {
            "patch": {
                "description": "Updates `[Production].[BillOfMaterials]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000076",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BillOfMaterialsID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.BillOfMaterials(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[BillOfMaterials]"
            }
        },
        "/UPDATE/Production/BillOfMaterials(ProductAssemblyID,ComponentID,StartDate)": {
            "patch": {
                "description": "Updates `[Production].[BillOfMaterials]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000075",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductAssemblyID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ComponentID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StartDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.BillOfMaterials(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[BillOfMaterials]"
            }
        },
        "/UPDATE/Production/Culture(CultureID)": {
            "patch": {
                "description": "Updates `[Production].[Culture]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000007b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CultureID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,6)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Culture(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Culture]"
            }
        },
        "/UPDATE/Production/Culture(Name)": {
            "patch": {
                "description": "Updates `[Production].[Culture]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000007c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Culture(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Culture]"
            }
        },
        "/UPDATE/Production/Document(DocumentLevel,DocumentNode)": {
            "patch": {
                "description": "Updates `[Production].[Document]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000082",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "DocumentLevel",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "DocumentNode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Document(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Document]"
            }
        },
        "/UPDATE/Production/Document(DocumentNode)": {
            "patch": {
                "description": "Updates `[Production].[Document]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000081",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "DocumentNode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Document(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Document]"
            }
        },
        "/UPDATE/Production/Document(rowguid)": {
            "patch": {
                "description": "Updates `[Production].[Document]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000083",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Document(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Document]"
            }
        },
        "/UPDATE/Production/Illustration(IllustrationID)": {
            "patch": {
                "description": "Updates `[Production].[Illustration]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000089",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "IllustrationID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Illustration(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Illustration]"
            }
        },
        "/UPDATE/Production/Location(LocationID)": {
            "patch": {
                "description": "Updates `[Production].[Location]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000008d",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "LocationID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Location(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Location]"
            }
        },
        "/UPDATE/Production/Location(Name)": {
            "patch": {
                "description": "Updates `[Production].[Location]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000008e",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Location(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Location]"
            }
        },
        "/UPDATE/Production/Product(Name)": {
            "patch": {
                "description": "Updates `[Production].[Product]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000d7",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Product(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Product]"
            }
        },
        "/UPDATE/Production/Product(ProductID)": {
            "patch": {
                "description": "Updates `[Production].[Product]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000d5",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Product(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Product]"
            }
        },
        "/UPDATE/Production/Product(ProductNumber)": {
            "patch": {
                "description": "Updates `[Production].[Product]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000d6",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,25)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Product(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Product]"
            }
        },
        "/UPDATE/Production/Product(rowguid)": {
            "patch": {
                "description": "Updates `[Production].[Product]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000d8",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.Product(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[Product]"
            }
        },
        "/UPDATE/Production/ProductCategory(Name)": {
            "patch": {
                "description": "Updates `[Production].[ProductCategory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000094",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductCategory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductCategory]"
            }
        },
        "/UPDATE/Production/ProductCategory(ProductCategoryID)": {
            "patch": {
                "description": "Updates `[Production].[ProductCategory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000093",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductCategoryID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductCategory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductCategory]"
            }
        },
        "/UPDATE/Production/ProductCategory(rowguid)": {
            "patch": {
                "description": "Updates `[Production].[ProductCategory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000095",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductCategory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductCategory]"
            }
        },
        "/UPDATE/Production/ProductCostHistory(ProductID,StartDate)": {
            "patch": {
                "description": "Updates `[Production].[ProductCostHistory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000009b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StartDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductCostHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductCostHistory]"
            }
        },
        "/UPDATE/Production/ProductDescription(ProductDescriptionID)": {
            "patch": {
                "description": "Updates `[Production].[ProductDescription]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000009f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductDescriptionID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductDescription(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductDescription]"
            }
        },
        "/UPDATE/Production/ProductDescription(rowguid)": {
            "patch": {
                "description": "Updates `[Production].[ProductDescription]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000a0",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductDescription(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductDescription]"
            }
        },
        "/UPDATE/Production/ProductDocument(ProductID,DocumentNode)": {
            "patch": {
                "description": "Updates `[Production].[ProductDocument]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000a5",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "DocumentNode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/sys.hierarchyid(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductDocument(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductDocument]"
            }
        },
        "/UPDATE/Production/ProductInventory(ProductID,LocationID)": {
            "patch": {
                "description": "Updates `[Production].[ProductInventory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000a9",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "LocationID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductInventory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductInventory]"
            }
        },
        "/UPDATE/Production/ProductListPriceHistory(ProductID,StartDate)": {
            "patch": {
                "description": "Updates `[Production].[ProductListPriceHistory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ad",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StartDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductListPriceHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductListPriceHistory]"
            }
        },
        "/UPDATE/Production/ProductModel(Name)": {
            "patch": {
                "description": "Updates `[Production].[ProductModel]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ba",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModel(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductModel]"
            }
        },
        "/UPDATE/Production/ProductModel(ProductModelID)": {
            "patch": {
                "description": "Updates `[Production].[ProductModel]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000b9",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductModelID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModel(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductModel]"
            }
        },
        "/UPDATE/Production/ProductModel(rowguid)": {
            "patch": {
                "description": "Updates `[Production].[ProductModel]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000bb",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModel(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductModel]"
            }
        },
        "/UPDATE/Production/ProductModelIllustration(ProductModelID,IllustrationID)": {
            "patch": {
                "description": "Updates `[Production].[ProductModelIllustration]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000b1",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductModelID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "IllustrationID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModelIllustration(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductModelIllustration]"
            }
        },
        "/UPDATE/Production/ProductModelProductDescriptionCulture(ProductModelID,ProductDescriptionID,CultureID)": {
            "patch": {
                "description": "Updates `[Production].[ProductModelProductDescriptionCulture]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000b5",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductModelID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ProductDescriptionID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "CultureID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,6)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductModelProductDescriptionCulture(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductModelProductDescriptionCulture]"
            }
        },
        "/UPDATE/Production/ProductPhoto(ProductPhotoID)": {
            "patch": {
                "description": "Updates `[Production].[ProductPhoto]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000c1",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductPhotoID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductPhoto(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductPhoto]"
            }
        },
        "/UPDATE/Production/ProductProductPhoto(ProductID,ProductPhotoID)": {
            "patch": {
                "description": "Updates `[Production].[ProductProductPhoto]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000c5",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ProductPhotoID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductProductPhoto(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductProductPhoto]"
            }
        },
        "/UPDATE/Production/ProductReview(ProductReviewID)": {
            "patch": {
                "description": "Updates `[Production].[ProductReview]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000c9",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductReviewID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductReview(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductReview]"
            }
        },
        "/UPDATE/Production/ProductSubcategory(Name)": {
            "patch": {
                "description": "Updates `[Production].[ProductSubcategory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ce",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductSubcategory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductSubcategory]"
            }
        },
        "/UPDATE/Production/ProductSubcategory(ProductSubcategoryID)": {
            "patch": {
                "description": "Updates `[Production].[ProductSubcategory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000cd",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductSubcategoryID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductSubcategory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductSubcategory]"
            }
        },
        "/UPDATE/Production/ProductSubcategory(rowguid)": {
            "patch": {
                "description": "Updates `[Production].[ProductSubcategory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000cf",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ProductSubcategory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ProductSubcategory]"
            }
        },
        "/UPDATE/Production/ScrapReason(Name)": {
            "patch": {
                "description": "Updates `[Production].[ScrapReason]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000e0",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ScrapReason(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ScrapReason]"
            }
        },
        "/UPDATE/Production/ScrapReason(ScrapReasonID)": {
            "patch": {
                "description": "Updates `[Production].[ScrapReason]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000df",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ScrapReasonID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.ScrapReason(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[ScrapReason]"
            }
        },
        "/UPDATE/Production/TransactionHistory(TransactionID)": {
            "patch": {
                "description": "Updates `[Production].[TransactionHistory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000e9",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "TransactionID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.TransactionHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[TransactionHistory]"
            }
        },
        "/UPDATE/Production/TransactionHistoryArchive(TransactionID)": {
            "patch": {
                "description": "Updates `[Production].[TransactionHistoryArchive]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000e5",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "TransactionID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.TransactionHistoryArchive(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[TransactionHistoryArchive]"
            }
        },
        "/UPDATE/Production/UnitMeasure(Name)": {
            "patch": {
                "description": "Updates `[Production].[UnitMeasure]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ee",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.UnitMeasure(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[UnitMeasure]"
            }
        },
        "/UPDATE/Production/UnitMeasure(UnitMeasureCode)": {
            "patch": {
                "description": "Updates `[Production].[UnitMeasure]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ed",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "UnitMeasureCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.UnitMeasure(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[UnitMeasure]"
            }
        },
        "/UPDATE/Production/WorkOrder(WorkOrderID)": {
            "patch": {
                "description": "Updates `[Production].[WorkOrder]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000f7",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "WorkOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.WorkOrder(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[WorkOrder]"
            }
        },
        "/UPDATE/Production/WorkOrderRouting(WorkOrderID,ProductID,OperationSequence)": {
            "patch": {
                "description": "Updates `[Production].[WorkOrderRouting]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000f3",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "WorkOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "OperationSequence",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/SmallInt(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Production.WorkOrderRouting(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Production].[WorkOrderRouting]"
            }
        },
        "/UPDATE/Purchasing/ProductVendor(ProductID,BusinessEntityID)": {
            "patch": {
                "description": "Updates `[Purchasing].[ProductVendor]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000fb",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.ProductVendor(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Purchasing].[ProductVendor]"
            }
        },
        "/UPDATE/Purchasing/PurchaseOrderDetail(PurchaseOrderID,PurchaseOrderDetailID)": {
            "patch": {
                "description": "Updates `[Purchasing].[PurchaseOrderDetail]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "00000000000000ff",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "PurchaseOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "PurchaseOrderDetailID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.PurchaseOrderDetail(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Purchasing].[PurchaseOrderDetail]"
            }
        },
        "/UPDATE/Purchasing/PurchaseOrderHeader(PurchaseOrderID)": {
            "patch": {
                "description": "Updates `[Purchasing].[PurchaseOrderHeader]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000103",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "PurchaseOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.PurchaseOrderHeader(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Purchasing].[PurchaseOrderHeader]"
            }
        },
        "/UPDATE/Purchasing/ShipMethod(Name)": {
            "patch": {
                "description": "Updates `[Purchasing].[ShipMethod]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000108",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.ShipMethod(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Purchasing].[ShipMethod]"
            }
        },
        "/UPDATE/Purchasing/ShipMethod(ShipMethodID)": {
            "patch": {
                "description": "Updates `[Purchasing].[ShipMethod]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000107",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ShipMethodID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.ShipMethod(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Purchasing].[ShipMethod]"
            }
        },
        "/UPDATE/Purchasing/ShipMethod(rowguid)": {
            "patch": {
                "description": "Updates `[Purchasing].[ShipMethod]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000109",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.ShipMethod(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Purchasing].[ShipMethod]"
            }
        },
        "/UPDATE/Purchasing/Vendor(AccountNumber)": {
            "patch": {
                "description": "Updates `[Purchasing].[Vendor]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000110",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "AccountNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,15)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.Vendor(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Purchasing].[Vendor]"
            }
        },
        "/UPDATE/Purchasing/Vendor(BusinessEntityID)": {
            "patch": {
                "description": "Updates `[Purchasing].[Vendor]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000010f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Purchasing.Vendor(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Purchasing].[Vendor]"
            }
        },
        "/UPDATE/Sales/CountryRegionCurrency(CountryRegionCode,CurrencyCode)": {
            "patch": {
                "description": "Updates `[Sales].[CountryRegionCurrency]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000115",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CountryRegionCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,3)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "CurrencyCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CountryRegionCurrency(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[CountryRegionCurrency]"
            }
        },
        "/UPDATE/Sales/CreditCard(CardNumber)": {
            "patch": {
                "description": "Updates `[Sales].[CreditCard]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000011a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CardNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,25)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CreditCard(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[CreditCard]"
            }
        },
        "/UPDATE/Sales/CreditCard(CreditCardID)": {
            "patch": {
                "description": "Updates `[Sales].[CreditCard]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000119",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CreditCardID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CreditCard(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[CreditCard]"
            }
        },
        "/UPDATE/Sales/Currency(CurrencyCode)": {
            "patch": {
                "description": "Updates `[Sales].[Currency]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000125",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CurrencyCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Currency(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[Currency]"
            }
        },
        "/UPDATE/Sales/Currency(Name)": {
            "patch": {
                "description": "Updates `[Sales].[Currency]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000126",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Currency(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[Currency]"
            }
        },
        "/UPDATE/Sales/CurrencyRate(CurrencyRateDate,FromCurrencyCode,ToCurrencyCode)": {
            "patch": {
                "description": "Updates `[Sales].[CurrencyRate]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000120",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CurrencyRateDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "FromCurrencyCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ToCurrencyCode",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NChar(Optional,3)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CurrencyRate(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[CurrencyRate]"
            }
        },
        "/UPDATE/Sales/CurrencyRate(CurrencyRateID)": {
            "patch": {
                "description": "Updates `[Sales].[CurrencyRate]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000011f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CurrencyRateID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.CurrencyRate(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[CurrencyRate]"
            }
        },
        "/UPDATE/Sales/Customer(AccountNumber)": {
            "patch": {
                "description": "Updates `[Sales].[Customer]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000012d",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "AccountNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/VarChar(Optional,10)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Customer(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[Customer]"
            }
        },
        "/UPDATE/Sales/Customer(CustomerID)": {
            "patch": {
                "description": "Updates `[Sales].[Customer]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000012b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "CustomerID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Customer(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[Customer]"
            }
        },
        "/UPDATE/Sales/Customer(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[Customer]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000012c",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Customer(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[Customer]"
            }
        },
        "/UPDATE/Sales/PersonCreditCard(BusinessEntityID,CreditCardID)": {
            "patch": {
                "description": "Updates `[Sales].[PersonCreditCard]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000133",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "CreditCardID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.PersonCreditCard(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[PersonCreditCard]"
            }
        },
        "/UPDATE/Sales/SalesOrderDetail(SalesOrderID,SalesOrderDetailID)": {
            "patch": {
                "description": "Updates `[Sales].[SalesOrderDetail]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000137",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "SalesOrderDetailID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderDetail(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesOrderDetail]"
            }
        },
        "/UPDATE/Sales/SalesOrderDetail(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[SalesOrderDetail]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000138",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderDetail(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesOrderDetail]"
            }
        },
        "/UPDATE/Sales/SalesOrderHeader(SalesOrderID)": {
            "patch": {
                "description": "Updates `[Sales].[SalesOrderHeader]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000141",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderHeader(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesOrderHeader]"
            }
        },
        "/UPDATE/Sales/SalesOrderHeader(SalesOrderNumber)": {
            "patch": {
                "description": "Updates `[Sales].[SalesOrderHeader]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000143",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesOrderNumber",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,25)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderHeader(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesOrderHeader]"
            }
        },
        "/UPDATE/Sales/SalesOrderHeader(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[SalesOrderHeader]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000142",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderHeader(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesOrderHeader]"
            }
        },
        "/UPDATE/Sales/SalesOrderHeaderSalesReason(SalesOrderID,SalesReasonID)": {
            "patch": {
                "description": "Updates `[Sales].[SalesOrderHeaderSalesReason]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000013d",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesOrderID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "SalesReasonID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesOrderHeaderSalesReason(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesOrderHeaderSalesReason]"
            }
        },
        "/UPDATE/Sales/SalesPerson(BusinessEntityID)": {
            "patch": {
                "description": "Updates `[Sales].[SalesPerson]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000014f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesPerson(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesPerson]"
            }
        },
        "/UPDATE/Sales/SalesPerson(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[SalesPerson]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000150",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesPerson(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesPerson]"
            }
        },
        "/UPDATE/Sales/SalesPersonQuotaHistory(BusinessEntityID,QuotaDate)": {
            "patch": {
                "description": "Updates `[Sales].[SalesPersonQuotaHistory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000149",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "QuotaDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesPersonQuotaHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesPersonQuotaHistory]"
            }
        },
        "/UPDATE/Sales/SalesPersonQuotaHistory(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[SalesPersonQuotaHistory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000014a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesPersonQuotaHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesPersonQuotaHistory]"
            }
        },
        "/UPDATE/Sales/SalesReason(SalesReasonID)": {
            "patch": {
                "description": "Updates `[Sales].[SalesReason]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000155",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesReasonID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesReason(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesReason]"
            }
        },
        "/UPDATE/Sales/SalesTaxRate(SalesTaxRateID)": {
            "patch": {
                "description": "Updates `[Sales].[SalesTaxRate]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000159",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SalesTaxRateID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTaxRate(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesTaxRate]"
            }
        },
        "/UPDATE/Sales/SalesTaxRate(StateProvinceID,TaxType)": {
            "patch": {
                "description": "Updates `[Sales].[SalesTaxRate]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000015a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "StateProvinceID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "TaxType",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TinyInt(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTaxRate(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesTaxRate]"
            }
        },
        "/UPDATE/Sales/SalesTaxRate(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[SalesTaxRate]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000015b",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTaxRate(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesTaxRate]"
            }
        },
        "/UPDATE/Sales/SalesTerritory(Name)": {
            "patch": {
                "description": "Updates `[Sales].[SalesTerritory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000168",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "Name",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/NVarChar(Optional,50)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTerritory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesTerritory]"
            }
        },
        "/UPDATE/Sales/SalesTerritory(TerritoryID)": {
            "patch": {
                "description": "Updates `[Sales].[SalesTerritory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000167",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "TerritoryID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTerritory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesTerritory]"
            }
        },
        "/UPDATE/Sales/SalesTerritory(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[SalesTerritory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000169",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTerritory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesTerritory]"
            }
        },
        "/UPDATE/Sales/SalesTerritoryHistory(BusinessEntityID,StartDate,TerritoryID)": {
            "patch": {
                "description": "Updates `[Sales].[SalesTerritoryHistory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000161",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "StartDate",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DateTime(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "TerritoryID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTerritoryHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesTerritoryHistory]"
            }
        },
        "/UPDATE/Sales/SalesTerritoryHistory(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[SalesTerritoryHistory]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000162",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SalesTerritoryHistory(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SalesTerritoryHistory]"
            }
        },
        "/UPDATE/Sales/ShoppingCartItem(ShoppingCartItemID)": {
            "patch": {
                "description": "Updates `[Sales].[ShoppingCartItem]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000016f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ShoppingCartItemID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.ShoppingCartItem(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[ShoppingCartItem]"
            }
        },
        "/UPDATE/Sales/SpecialOffer(SpecialOfferID)": {
            "patch": {
                "description": "Updates `[Sales].[SpecialOffer]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000179",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SpecialOfferID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SpecialOffer(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SpecialOffer]"
            }
        },
        "/UPDATE/Sales/SpecialOffer(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[SpecialOffer]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000017a",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SpecialOffer(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SpecialOffer]"
            }
        },
        "/UPDATE/Sales/SpecialOfferProduct(SpecialOfferID,ProductID)": {
            "patch": {
                "description": "Updates `[Sales].[SpecialOfferProduct]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000173",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SpecialOfferID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    },
                    {
                        "in": "query",
                        "name": "ProductID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SpecialOfferProduct(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SpecialOfferProduct]"
            }
        },
        "/UPDATE/Sales/SpecialOfferProduct(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[SpecialOfferProduct]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000174",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.SpecialOfferProduct(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[SpecialOfferProduct]"
            }
        },
        "/UPDATE/Sales/Store(BusinessEntityID)": {
            "patch": {
                "description": "Updates `[Sales].[Store]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000017f",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "BusinessEntityID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Store(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[Store]"
            }
        },
        "/UPDATE/Sales/Store(rowguid)": {
            "patch": {
                "description": "Updates `[Sales].[Store]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000180",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "rowguid",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/UniqueIdentifier(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Sales.Store(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [Sales].[Store]"
            }
        },
        "/UPDATE/dbo/AWBuildVersion(SystemInformationID)": {
            "patch": {
                "description": "Updates `[dbo].[AWBuildVersion]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000185",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "SystemInformationID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/TinyInt(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.AWBuildVersion(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [dbo].[AWBuildVersion]"
            }
        },
        "/UPDATE/dbo/DatabaseLog(DatabaseLogID)": {
            "patch": {
                "description": "Updates `[dbo].[DatabaseLog]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "0000000000000189",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "DatabaseLogID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.DatabaseLog(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [dbo].[DatabaseLog]"
            }
        },
        "/UPDATE/dbo/ErrorLog(ErrorLogID)": {
            "patch": {
                "description": "Updates `[dbo].[ErrorLog]` with the values specified.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "X-K2-OPERATION",
                        "required": true,
                        "schema": {
                            "maxLength": 16,
                            "minLength": 16,
                            "pattern": "^([0-9a-f]){16}$",
                            "type": "string"
                        },
                        "x-k2-gateway-fixedValue": "000000000000018d",
                        "x-k2-gateway-gatewayOnly": true
                    },
                    {
                        "in": "query",
                        "name": "ErrorLogID",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/Int(Optional)"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/dbo.ErrorLog(Updateable)"
                            }
                        }
                    },
                    "description": "The properties to update.",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The record was updated."
                    }
                },
                "summary": "UPDATE [dbo].[ErrorLog]"
            }
        }
    }
}
